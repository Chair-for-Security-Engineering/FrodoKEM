-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity absorb_block is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_offset : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    outlen : IN STD_LOGIC_VECTOR (5 downto 0);
    inlen : IN STD_LOGIC_VECTOR (8 downto 0);
    reset : IN STD_LOGIC_VECTOR (0 downto 0);
    begin_r : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of absorb_block is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv16_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010101";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal start_1 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal p_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal i_1_reg_337 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_rec_reg_347 : STD_LOGIC_VECTOR (63 downto 0);
    signal begin_read_read_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reset_read_read_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inlen_cast_fu_568_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal inlen_cast_reg_1431 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_fu_584_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln769_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln769_reg_1444 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal start_1_load_reg_1452 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln745_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_fu_759_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_reg_1461 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_reg_1467 : STD_LOGIC_VECTOR (1 downto 0);
    signal end_2_fu_818_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal end_2_reg_1472 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal empty_27_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_27_reg_1481 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln745_fu_831_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln745_reg_1486 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_13_fu_835_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln750_fu_838_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln750_reg_1499 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln755_cast5_fu_841_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln755_cast5_reg_1504 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln755_fu_878_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln755_reg_1509 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln755_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln755_reg_1514 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state7_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal empty_28_fu_889_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_28_reg_1518 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln763_fu_919_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln763_reg_1534 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_29_fu_923_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_29_reg_1539 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state8_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal grp_fu_452_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_1_reg_1544 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal empty_30_fu_927_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_30_reg_1549 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_462_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_12_1_reg_1554 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln764_fu_961_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln764_reg_1569 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_14_fu_967_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_14_reg_1574 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln767_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln767_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal or_ln769_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln769_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln775_fu_1244_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_KeccakF1600_StatePer_fu_390_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_ap_done : STD_LOGIC;
    signal ap_predicate_op258_call_state11 : BOOLEAN;
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal zext_ln794_1_fu_1262_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln794_1_reg_1593 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal i_15_fu_1270_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_15_reg_1601 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal r_3_fu_1280_p27 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln789_fu_1265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_1336_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_reg_1611 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_fu_1350_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal r_5_fu_1408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln792_fu_1344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal grp_KeccakF1600_StatePer_fu_390_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_0_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_0_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_5_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_5_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_10_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_10_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_15_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_15_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_20_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_20_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_1_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_1_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_6_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_6_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_11_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_11_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_16_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_16_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_21_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_21_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_2_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_2_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_7_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_7_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_12_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_12_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_17_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_17_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_22_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_22_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_3_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_3_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_8_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_8_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_13_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_13_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_18_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_18_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_23_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_23_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_4_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_4_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_9_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_9_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_14_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_14_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_19_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_19_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_390_p_24_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_p_24_o_ap_vld : STD_LOGIC;
    signal ap_phi_mux_i_0_phi_fu_308_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_reg_304 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln737_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_01_reg_315 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_idx_reg_325 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_i_1_phi_fu_340_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_p_1_rec_phi_fu_351_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_2_reg_359 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_0_reg_370 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_2_reg_381 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_390_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_0_idx22_cast_fu_898_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln760_fu_914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln761_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal zext_ln762_fu_956_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln794_2_fu_1393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln776_fu_1250_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln763_fu_1052_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_779_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln769_fu_740_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln749_fu_755_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_765_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln749_fu_804_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln750_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln749_1_fu_808_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal umax3_fu_847_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln755_fu_852_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast4_cast_fu_844_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln755_fu_856_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_862_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln755_fu_870_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln755_1_fu_874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_idx22_fu_893_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln760_fu_903_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln760_fu_909_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln761_fu_931_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln761_fu_936_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln762_fu_946_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln762_fu_951_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_32_fu_977_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_31_fu_973_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_997_p27 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_8_fu_981_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln769_2_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln769_1_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln769_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln775_fu_1239_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln775_fu_1235_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_3_fu_1280_p26 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln794_fu_1366_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln9_fu_1356_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln794_fu_1379_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln794_fu_1383_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln794_1_fu_1388_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_4_fu_1398_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component KeccakF1600_StatePer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_0_o_ap_vld : OUT STD_LOGIC;
        p_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_5_o_ap_vld : OUT STD_LOGIC;
        p_10_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_10_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_10_o_ap_vld : OUT STD_LOGIC;
        p_15_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_15_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_15_o_ap_vld : OUT STD_LOGIC;
        p_20_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_20_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_20_o_ap_vld : OUT STD_LOGIC;
        p_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_1_o_ap_vld : OUT STD_LOGIC;
        p_6_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_6_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_6_o_ap_vld : OUT STD_LOGIC;
        p_11_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_11_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_11_o_ap_vld : OUT STD_LOGIC;
        p_16_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_16_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_16_o_ap_vld : OUT STD_LOGIC;
        p_21_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_21_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_21_o_ap_vld : OUT STD_LOGIC;
        p_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_2_o_ap_vld : OUT STD_LOGIC;
        p_7_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_7_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_7_o_ap_vld : OUT STD_LOGIC;
        p_12_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_12_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_12_o_ap_vld : OUT STD_LOGIC;
        p_17_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_17_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_17_o_ap_vld : OUT STD_LOGIC;
        p_22_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_22_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_22_o_ap_vld : OUT STD_LOGIC;
        p_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_3_o_ap_vld : OUT STD_LOGIC;
        p_8_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_8_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_8_o_ap_vld : OUT STD_LOGIC;
        p_13_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_13_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_13_o_ap_vld : OUT STD_LOGIC;
        p_18_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_18_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_18_o_ap_vld : OUT STD_LOGIC;
        p_23_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_23_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_23_o_ap_vld : OUT STD_LOGIC;
        p_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_4_o_ap_vld : OUT STD_LOGIC;
        p_9_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_9_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_9_o_ap_vld : OUT STD_LOGIC;
        p_14_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_14_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_14_o_ap_vld : OUT STD_LOGIC;
        p_19_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_19_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_19_o_ap_vld : OUT STD_LOGIC;
        p_24_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_24_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_24_o_ap_vld : OUT STD_LOGIC );
    end component;


    component frodo_keygen_mux_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (63 downto 0);
        din5 : IN STD_LOGIC_VECTOR (63 downto 0);
        din6 : IN STD_LOGIC_VECTOR (63 downto 0);
        din7 : IN STD_LOGIC_VECTOR (63 downto 0);
        din8 : IN STD_LOGIC_VECTOR (63 downto 0);
        din9 : IN STD_LOGIC_VECTOR (63 downto 0);
        din10 : IN STD_LOGIC_VECTOR (63 downto 0);
        din11 : IN STD_LOGIC_VECTOR (63 downto 0);
        din12 : IN STD_LOGIC_VECTOR (63 downto 0);
        din13 : IN STD_LOGIC_VECTOR (63 downto 0);
        din14 : IN STD_LOGIC_VECTOR (63 downto 0);
        din15 : IN STD_LOGIC_VECTOR (63 downto 0);
        din16 : IN STD_LOGIC_VECTOR (63 downto 0);
        din17 : IN STD_LOGIC_VECTOR (63 downto 0);
        din18 : IN STD_LOGIC_VECTOR (63 downto 0);
        din19 : IN STD_LOGIC_VECTOR (63 downto 0);
        din20 : IN STD_LOGIC_VECTOR (63 downto 0);
        din21 : IN STD_LOGIC_VECTOR (63 downto 0);
        din22 : IN STD_LOGIC_VECTOR (63 downto 0);
        din23 : IN STD_LOGIC_VECTOR (63 downto 0);
        din24 : IN STD_LOGIC_VECTOR (63 downto 0);
        din25 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_KeccakF1600_StatePer_fu_390 : component KeccakF1600_StatePer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePer_fu_390_ap_start,
        ap_done => grp_KeccakF1600_StatePer_fu_390_ap_done,
        ap_idle => grp_KeccakF1600_StatePer_fu_390_ap_idle,
        ap_ready => grp_KeccakF1600_StatePer_fu_390_ap_ready,
        p_0_i => p_0,
        p_0_o => grp_KeccakF1600_StatePer_fu_390_p_0_o,
        p_0_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_0_o_ap_vld,
        p_5_i => p_5,
        p_5_o => grp_KeccakF1600_StatePer_fu_390_p_5_o,
        p_5_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_5_o_ap_vld,
        p_10_i => p_10,
        p_10_o => grp_KeccakF1600_StatePer_fu_390_p_10_o,
        p_10_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_10_o_ap_vld,
        p_15_i => p_15,
        p_15_o => grp_KeccakF1600_StatePer_fu_390_p_15_o,
        p_15_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_15_o_ap_vld,
        p_20_i => p_20,
        p_20_o => grp_KeccakF1600_StatePer_fu_390_p_20_o,
        p_20_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_20_o_ap_vld,
        p_1_i => p_1,
        p_1_o => grp_KeccakF1600_StatePer_fu_390_p_1_o,
        p_1_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_1_o_ap_vld,
        p_6_i => p_6,
        p_6_o => grp_KeccakF1600_StatePer_fu_390_p_6_o,
        p_6_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_6_o_ap_vld,
        p_11_i => p_11,
        p_11_o => grp_KeccakF1600_StatePer_fu_390_p_11_o,
        p_11_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_11_o_ap_vld,
        p_16_i => p_16,
        p_16_o => grp_KeccakF1600_StatePer_fu_390_p_16_o,
        p_16_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_16_o_ap_vld,
        p_21_i => p_21,
        p_21_o => grp_KeccakF1600_StatePer_fu_390_p_21_o,
        p_21_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_21_o_ap_vld,
        p_2_i => p_2,
        p_2_o => grp_KeccakF1600_StatePer_fu_390_p_2_o,
        p_2_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_2_o_ap_vld,
        p_7_i => p_7,
        p_7_o => grp_KeccakF1600_StatePer_fu_390_p_7_o,
        p_7_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_7_o_ap_vld,
        p_12_i => p_12,
        p_12_o => grp_KeccakF1600_StatePer_fu_390_p_12_o,
        p_12_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_12_o_ap_vld,
        p_17_i => p_17,
        p_17_o => grp_KeccakF1600_StatePer_fu_390_p_17_o,
        p_17_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_17_o_ap_vld,
        p_22_i => p_22,
        p_22_o => grp_KeccakF1600_StatePer_fu_390_p_22_o,
        p_22_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_22_o_ap_vld,
        p_3_i => p_3,
        p_3_o => grp_KeccakF1600_StatePer_fu_390_p_3_o,
        p_3_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_3_o_ap_vld,
        p_8_i => p_8,
        p_8_o => grp_KeccakF1600_StatePer_fu_390_p_8_o,
        p_8_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_8_o_ap_vld,
        p_13_i => p_13,
        p_13_o => grp_KeccakF1600_StatePer_fu_390_p_13_o,
        p_13_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_13_o_ap_vld,
        p_18_i => p_18,
        p_18_o => grp_KeccakF1600_StatePer_fu_390_p_18_o,
        p_18_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_18_o_ap_vld,
        p_23_i => p_23,
        p_23_o => grp_KeccakF1600_StatePer_fu_390_p_23_o,
        p_23_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_23_o_ap_vld,
        p_4_i => p_4,
        p_4_o => grp_KeccakF1600_StatePer_fu_390_p_4_o,
        p_4_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_4_o_ap_vld,
        p_9_i => p_9,
        p_9_o => grp_KeccakF1600_StatePer_fu_390_p_9_o,
        p_9_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_9_o_ap_vld,
        p_14_i => p_14,
        p_14_o => grp_KeccakF1600_StatePer_fu_390_p_14_o,
        p_14_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_14_o_ap_vld,
        p_19_i => p_19,
        p_19_o => grp_KeccakF1600_StatePer_fu_390_p_19_o,
        p_19_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_19_o_ap_vld,
        p_24_i => p_24,
        p_24_o => grp_KeccakF1600_StatePer_fu_390_p_24_o,
        p_24_o_ap_vld => grp_KeccakF1600_StatePer_fu_390_p_24_o_ap_vld);

    frodo_keygen_mux_bkb_U26 : component frodo_keygen_mux_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 64,
        din5_WIDTH => 64,
        din6_WIDTH => 64,
        din7_WIDTH => 64,
        din8_WIDTH => 64,
        din9_WIDTH => 64,
        din10_WIDTH => 64,
        din11_WIDTH => 64,
        din12_WIDTH => 64,
        din13_WIDTH => 64,
        din14_WIDTH => 64,
        din15_WIDTH => 64,
        din16_WIDTH => 64,
        din17_WIDTH => 64,
        din18_WIDTH => 64,
        din19_WIDTH => 64,
        din20_WIDTH => 64,
        din21_WIDTH => 64,
        din22_WIDTH => 64,
        din23_WIDTH => 64,
        din24_WIDTH => 64,
        din25_WIDTH => 5,
        dout_WIDTH => 64)
    port map (
        din0 => p_0,
        din1 => p_1,
        din2 => p_2,
        din3 => p_3,
        din4 => p_4,
        din5 => p_5,
        din6 => p_6,
        din7 => p_7,
        din8 => p_8,
        din9 => p_9,
        din10 => p_10,
        din11 => p_11,
        din12 => p_12,
        din13 => p_13,
        din14 => p_14,
        din15 => p_15,
        din16 => p_16,
        din17 => p_17,
        din18 => p_18,
        din19 => p_19,
        din20 => p_20,
        din21 => p_21,
        din22 => p_22,
        din23 => p_23,
        din24 => p_24,
        din25 => trunc_ln763_reg_1534,
        dout => tmp_5_fu_997_p27);

    frodo_keygen_mux_bkb_U27 : component frodo_keygen_mux_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 64,
        din5_WIDTH => 64,
        din6_WIDTH => 64,
        din7_WIDTH => 64,
        din8_WIDTH => 64,
        din9_WIDTH => 64,
        din10_WIDTH => 64,
        din11_WIDTH => 64,
        din12_WIDTH => 64,
        din13_WIDTH => 64,
        din14_WIDTH => 64,
        din15_WIDTH => 64,
        din16_WIDTH => 64,
        din17_WIDTH => 64,
        din18_WIDTH => 64,
        din19_WIDTH => 64,
        din20_WIDTH => 64,
        din21_WIDTH => 64,
        din22_WIDTH => 64,
        din23_WIDTH => 64,
        din24_WIDTH => 64,
        din25_WIDTH => 5,
        dout_WIDTH => 64)
    port map (
        din0 => p_0,
        din1 => p_1,
        din2 => p_2,
        din3 => p_3,
        din4 => p_4,
        din5 => p_5,
        din6 => p_6,
        din7 => p_7,
        din8 => p_8,
        din9 => p_9,
        din10 => p_10,
        din11 => p_11,
        din12 => p_12,
        din13 => p_13,
        din14 => p_14,
        din15 => p_15,
        din16 => p_16,
        din17 => p_17,
        din18 => p_18,
        din19 => p_19,
        din20 => p_20,
        din21 => p_21,
        din22 => p_22,
        din23 => p_23,
        din24 => p_24,
        din25 => r_3_fu_1280_p26,
        dout => r_3_fu_1280_p27);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePer_fu_390_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePer_fu_390_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (or_ln769_fu_1229_p2 = ap_const_lv1_1) and (icmp_ln767_fu_1208_p2 = ap_const_lv1_1)))) then 
                    grp_KeccakF1600_StatePer_fu_390_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePer_fu_390_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePer_fu_390_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                i_0_reg_304 <= i_fu_584_p2;
            elsif (((reset_read_read_fu_226_p2 = ap_const_lv1_1) and (begin_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_304 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_1_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln755_reg_1514 = ap_const_lv1_1))) then 
                i_1_reg_337 <= i_14_reg_1574;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i_1_reg_337 <= i_13_fu_835_p1;
            end if; 
        end if;
    end process;

    i_2_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln792_fu_1344_p2 = ap_const_lv1_1))) then 
                i_2_reg_359 <= i_15_reg_1601;
            elsif (((grp_KeccakF1600_StatePer_fu_390_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                i_2_reg_359 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_0_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln792_fu_1344_p2 = ap_const_lv1_0))) then 
                j_0_reg_370 <= j_fu_1350_p2;
            elsif (((begin_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln789_fu_1265_p2 = ap_const_lv1_0) and (icmp_ln769_reg_1444 = ap_const_lv1_0))) then 
                j_0_reg_370 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln763_reg_1534 = ap_const_lv5_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_0 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_0 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_0 <= grp_KeccakF1600_StatePer_fu_390_p_0_o;
            end if; 
        end if;
    end process;

    p_01_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                p_01_reg_315 <= add_ln775_fu_1244_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_01_reg_315 <= inlen_cast_reg_1431;
            end if; 
        end if;
    end process;

    p_0_idx_reg_325_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                p_0_idx_reg_325 <= add_ln755_reg_1509;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_0_idx_reg_325 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_1 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_1 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_1 <= grp_KeccakF1600_StatePer_fu_390_p_1_o;
            end if; 
        end if;
    end process;

    p_10_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_A) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_10 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_A) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_10 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_10_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_10_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_10 <= grp_KeccakF1600_StatePer_fu_390_p_10_o;
            end if; 
        end if;
    end process;

    p_11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_B) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_11 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_B) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_11 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_11_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_11_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_11 <= grp_KeccakF1600_StatePer_fu_390_p_11_o;
            end if; 
        end if;
    end process;

    p_12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_12 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_C) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_12 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_12_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_12_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_12 <= grp_KeccakF1600_StatePer_fu_390_p_12_o;
            end if; 
        end if;
    end process;

    p_13_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_D) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_13 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_D) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_13 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_13_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_13_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_13 <= grp_KeccakF1600_StatePer_fu_390_p_13_o;
            end if; 
        end if;
    end process;

    p_14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_E) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_14 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_E) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_14 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_14_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_14_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_14 <= grp_KeccakF1600_StatePer_fu_390_p_14_o;
            end if; 
        end if;
    end process;

    p_15_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_15 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_F) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_15 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_15_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_15_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_15 <= grp_KeccakF1600_StatePer_fu_390_p_15_o;
            end if; 
        end if;
    end process;

    p_16_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_10) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_16 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_10) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_16 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_16_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_16_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_16 <= grp_KeccakF1600_StatePer_fu_390_p_16_o;
            end if; 
        end if;
    end process;

    p_17_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_11) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_17 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_11) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_17 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_17_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_17_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_17 <= grp_KeccakF1600_StatePer_fu_390_p_17_o;
            end if; 
        end if;
    end process;

    p_18_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_12) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_18 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_12) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_18 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_18_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_18_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_18 <= grp_KeccakF1600_StatePer_fu_390_p_18_o;
            end if; 
        end if;
    end process;

    p_19_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_13) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_19 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_13) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_19 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_19_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_19_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_19 <= grp_KeccakF1600_StatePer_fu_390_p_19_o;
            end if; 
        end if;
    end process;

    p_1_rec_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln755_reg_1514 = ap_const_lv1_1))) then 
                p_1_rec_reg_347 <= add_ln764_reg_1569;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                p_1_rec_reg_347 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_2 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_2 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_2 <= grp_KeccakF1600_StatePer_fu_390_p_2_o;
            end if; 
        end if;
    end process;

    p_20_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_14) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_20 <= xor_ln763_fu_1052_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln745_fu_749_p2 = ap_const_lv1_1) and (icmp_ln769_reg_1444 = ap_const_lv1_0))) then 
                p_20 <= p_Result_s_fu_779_p4;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_14) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_20 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_20_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_20_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_20 <= grp_KeccakF1600_StatePer_fu_390_p_20_o;
            end if; 
        end if;
    end process;

    p_21_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_15) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_21 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_15) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_21 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_21_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_21_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_21 <= grp_KeccakF1600_StatePer_fu_390_p_21_o;
            end if; 
        end if;
    end process;

    p_22_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_16) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_22 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_16) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_22 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_22_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_22_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_22 <= grp_KeccakF1600_StatePer_fu_390_p_22_o;
            end if; 
        end if;
    end process;

    p_23_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_17) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_23 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_17) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_23 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_23_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_23_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_23 <= grp_KeccakF1600_StatePer_fu_390_p_23_o;
            end if; 
        end if;
    end process;

    p_24_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and ((trunc_ln763_reg_1534 = ap_const_lv5_18) or ((trunc_ln763_reg_1534 = ap_const_lv5_19) or ((trunc_ln763_reg_1534 = ap_const_lv5_1A) or ((trunc_ln763_reg_1534 = ap_const_lv5_1B) or ((trunc_ln763_reg_1534 = ap_const_lv5_1C) or ((trunc_ln763_reg_1534 = ap_const_lv5_1D) or ((trunc_ln763_reg_1534 = ap_const_lv5_1E) or (trunc_ln763_reg_1534 = ap_const_lv5_1F)))))))))) then 
                p_24 <= xor_ln763_fu_1052_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (((((((((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_1E) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0)) or ((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_1F) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_1D) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_1C) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_1B) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_1A) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_19) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_18) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))))) then 
                p_24 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_24_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_24_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_24 <= grp_KeccakF1600_StatePer_fu_390_p_24_o;
            end if; 
        end if;
    end process;

    p_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_3 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_3 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_3 <= grp_KeccakF1600_StatePer_fu_390_p_3_o;
            end if; 
        end if;
    end process;

    p_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_4) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_4 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_4) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_4 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_4_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_4_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_4 <= grp_KeccakF1600_StatePer_fu_390_p_4_o;
            end if; 
        end if;
    end process;

    p_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_5) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_5 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_5) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_5 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_5_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_5_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_5 <= grp_KeccakF1600_StatePer_fu_390_p_5_o;
            end if; 
        end if;
    end process;

    p_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_6 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_6) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_6 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_6_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_6_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_6 <= grp_KeccakF1600_StatePer_fu_390_p_6_o;
            end if; 
        end if;
    end process;

    p_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_7) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_7 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_7) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_7 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_7_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_7_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_7 <= grp_KeccakF1600_StatePer_fu_390_p_7_o;
            end if; 
        end if;
    end process;

    p_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_8) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_8 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_8) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_8 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_8_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_8_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_8 <= grp_KeccakF1600_StatePer_fu_390_p_8_o;
            end if; 
        end if;
    end process;

    p_9_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln763_reg_1534 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_9 <= xor_ln763_fu_1052_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_308_p4 = ap_const_lv5_9) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then 
                p_9 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_390_p_9_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_predicate_op258_call_state11 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_390_p_9_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                p_9 <= grp_KeccakF1600_StatePer_fu_390_p_9_o;
            end if; 
        end if;
    end process;

    r_2_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln792_fu_1344_p2 = ap_const_lv1_0))) then 
                r_2_reg_381 <= r_5_fu_1408_p1;
            elsif (((begin_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln789_fu_1265_p2 = ap_const_lv1_0) and (icmp_ln769_reg_1444 = ap_const_lv1_0))) then 
                r_2_reg_381 <= r_3_fu_1280_p27;
            end if; 
        end if;
    end process;

    start_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                start_1 <= select_ln776_fu_1250_p3;
            elsif (((reset_read_read_fu_226_p2 = ap_const_lv1_1) and (begin_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                start_1 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln755_reg_1509 <= add_ln755_fu_878_p2;
                trunc_ln745_reg_1486 <= trunc_ln745_fu_831_p1;
                    zext_ln750_reg_1499(4 downto 0) <= zext_ln750_fu_838_p1(4 downto 0);
                    zext_ln755_cast5_reg_1504(4 downto 0) <= zext_ln755_cast5_fu_841_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln755_reg_1514 = ap_const_lv1_1))) then
                add_ln764_reg_1569 <= add_ln764_fu_961_p2;
                i_14_reg_1574 <= i_14_fu_967_p2;
                input_load_12_1_reg_1554 <= input_r_q1(15 downto 8);
                input_load_1_reg_1544 <= input_r_q0(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                empty_27_reg_1481 <= empty_27_fu_826_p2;
                end_2_reg_1472 <= end_2_fu_818_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln755_fu_884_p2 = ap_const_lv1_1))) then
                empty_28_reg_1518 <= empty_28_fu_889_p1;
                trunc_ln763_reg_1534 <= trunc_ln763_fu_919_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln755_reg_1514 = ap_const_lv1_1))) then
                empty_29_reg_1539 <= empty_29_fu_923_p1;
                empty_30_reg_1549 <= empty_30_fu_927_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((begin_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln769_reg_1444 = ap_const_lv1_0))) then
                i_15_reg_1601 <= i_15_fu_1270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln755_reg_1514 <= icmp_ln755_fu_884_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                icmp_ln767_reg_1579 <= icmp_ln767_fu_1208_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln769_reg_1444 <= icmp_ln769_fu_743_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    inlen_cast_reg_1431(8 downto 0) <= inlen_cast_fu_568_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln767_fu_1208_p2 = ap_const_lv1_1))) then
                or_ln769_reg_1584 <= or_ln769_fu_1229_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((begin_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln789_fu_1265_p2 = ap_const_lv1_0) and (icmp_ln769_reg_1444 = ap_const_lv1_0))) then
                    shl_ln_reg_1611(3 downto 2) <= shl_ln_fu_1336_p3(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln745_fu_749_p2 = ap_const_lv1_0))) then
                start_1_load_reg_1452 <= start_1;
                sum_reg_1461 <= sum_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln745_fu_749_p2 = ap_const_lv1_1) and (icmp_ln769_reg_1444 = ap_const_lv1_0))) then
                tmp_8_reg_1467 <= outlen(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_KeccakF1600_StatePer_fu_390_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    zext_ln794_1_reg_1593(0) <= zext_ln794_1_fu_1262_p1(0);
            end if;
        end if;
    end process;
    inlen_cast_reg_1431(15 downto 9) <= "0000000";
    zext_ln750_reg_1499(15 downto 5) <= "00000000000";
    zext_ln755_cast5_reg_1504(7 downto 5) <= "000";
    zext_ln794_1_reg_1593(3 downto 1) <= "000";
    shl_ln_reg_1611(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, begin_read_read_fu_220_p2, reset_read_read_fu_226_p2, ap_CS_fsm_state2, icmp_ln769_reg_1444, ap_CS_fsm_state4, icmp_ln745_fu_749_p2, icmp_ln755_fu_884_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, grp_KeccakF1600_StatePer_fu_390_ap_done, ap_block_state11_on_subcall_done, ap_CS_fsm_state13, ap_CS_fsm_state14, icmp_ln789_fu_1265_p2, ap_CS_fsm_state15, icmp_ln792_fu_1344_p2, ap_block_pp1_stage0_subdone, ap_block_pp1_stage1_subdone, icmp_ln737_fu_578_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((reset_read_read_fu_226_p2 = ap_const_lv1_1) and (begin_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((reset_read_read_fu_226_p2 = ap_const_lv1_0) and (begin_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((begin_read_read_fu_220_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln737_fu_578_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln745_fu_749_p2 = ap_const_lv1_1) and (icmp_ln769_reg_1444 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln745_fu_749_p2 = ap_const_lv1_1) and (icmp_ln769_reg_1444 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln755_fu_884_p2 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln755_fu_884_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_KeccakF1600_StatePer_fu_390_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and ((begin_read_read_fu_220_p2 = ap_const_lv1_0) or ((icmp_ln789_fu_1265_p2 = ap_const_lv1_1) or (icmp_ln769_reg_1444 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln792_fu_1344_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln749_1_fu_808_p2 <= std_logic_vector(unsigned(trunc_ln749_fu_804_p1) + unsigned(start_1_load_reg_1452));
    add_ln755_fu_878_p2 <= std_logic_vector(unsigned(p_0_idx_reg_325) + unsigned(zext_ln755_1_fu_874_p1));
    add_ln760_fu_909_p2 <= std_logic_vector(unsigned(or_ln760_fu_903_p2) + unsigned(trunc_ln745_reg_1486));
    add_ln761_fu_936_p2 <= std_logic_vector(unsigned(or_ln761_fu_931_p2) + unsigned(trunc_ln745_reg_1486));
    add_ln762_fu_951_p2 <= std_logic_vector(unsigned(or_ln762_fu_946_p2) + unsigned(trunc_ln745_reg_1486));
    add_ln764_fu_961_p2 <= std_logic_vector(unsigned(p_1_rec_reg_347) + unsigned(ap_const_lv64_4));
    add_ln775_fu_1244_p2 <= std_logic_vector(unsigned(sub_ln775_fu_1239_p2) + unsigned(zext_ln775_fu_1235_p1));
    add_ln794_1_fu_1388_p2 <= std_logic_vector(unsigned(zext_ln794_1_reg_1593) + unsigned(add_ln794_fu_1383_p2));
    add_ln794_fu_1383_p2 <= std_logic_vector(unsigned(zext_ln794_fu_1379_p1) + unsigned(shl_ln_reg_1611));
    and_ln769_fu_1224_p2 <= (icmp_ln769_reg_1444 and icmp_ln769_2_fu_1218_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state14 <= ap_CS_fsm(12);
    ap_CS_fsm_state15 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_on_subcall_done_assign_proc : process(grp_KeccakF1600_StatePer_fu_390_ap_done, ap_predicate_op258_call_state11)
    begin
                ap_block_state11_on_subcall_done <= ((grp_KeccakF1600_StatePer_fu_390_ap_done = ap_const_logic_0) and (ap_predicate_op258_call_state11 = ap_const_boolean_1));
    end process;

        ap_block_state7_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state7_assign_proc : process(icmp_ln755_fu_884_p2)
    begin
        if ((icmp_ln755_fu_884_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, begin_read_read_fu_220_p2, icmp_ln769_reg_1444, ap_CS_fsm_state14, icmp_ln789_fu_1265_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state14) and ((begin_read_read_fu_220_p2 = ap_const_lv1_0) or ((icmp_ln789_fu_1265_p2 = ap_const_lv1_1) or (icmp_ln769_reg_1444 = ap_const_lv1_1)))) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i_0_phi_fu_308_p4 <= i_0_reg_304;

    ap_phi_mux_i_1_phi_fu_340_p4_assign_proc : process(i_1_reg_337, icmp_ln755_reg_1514, ap_CS_fsm_pp1_stage0, i_14_reg_1574, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln755_reg_1514 = ap_const_lv1_1))) then 
            ap_phi_mux_i_1_phi_fu_340_p4 <= i_14_reg_1574;
        else 
            ap_phi_mux_i_1_phi_fu_340_p4 <= i_1_reg_337;
        end if; 
    end process;


    ap_phi_mux_p_1_rec_phi_fu_351_p4_assign_proc : process(p_1_rec_reg_347, icmp_ln755_reg_1514, ap_CS_fsm_pp1_stage0, add_ln764_reg_1569, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln755_reg_1514 = ap_const_lv1_1))) then 
            ap_phi_mux_p_1_rec_phi_fu_351_p4 <= add_ln764_reg_1569;
        else 
            ap_phi_mux_p_1_rec_phi_fu_351_p4 <= p_1_rec_reg_347;
        end if; 
    end process;


    ap_predicate_op258_call_state11_assign_proc : process(icmp_ln767_reg_1579, or_ln769_reg_1584)
    begin
                ap_predicate_op258_call_state11 <= ((or_ln769_reg_1584 = ap_const_lv1_1) and (icmp_ln767_reg_1579 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(begin_read_read_fu_220_p2, icmp_ln769_reg_1444, ap_CS_fsm_state14, icmp_ln789_fu_1265_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and ((begin_read_read_fu_220_p2 = ap_const_lv1_0) or ((icmp_ln789_fu_1265_p2 = ap_const_lv1_1) or (icmp_ln769_reg_1444 = ap_const_lv1_1))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    begin_read_read_fu_220_p2 <= begin_r;
    empty_27_fu_826_p2 <= "1" when (unsigned(start_1_load_reg_1452) > unsigned(end_2_fu_818_p3)) else "0";
    empty_28_fu_889_p1 <= ap_phi_mux_p_1_rec_phi_fu_351_p4(11 - 1 downto 0);
    empty_29_fu_923_p1 <= input_r_q0(8 - 1 downto 0);
    empty_30_fu_927_p1 <= input_r_q1(8 - 1 downto 0);
    empty_31_fu_973_p1 <= input_r_q0(8 - 1 downto 0);
    empty_32_fu_977_p1 <= input_r_q1(8 - 1 downto 0);
    end_2_fu_818_p3 <= 
        add_ln749_1_fu_808_p2 when (icmp_ln750_fu_813_p2(0) = '1') else 
        ap_const_lv5_15;
    grp_KeccakF1600_StatePer_fu_390_ap_start <= grp_KeccakF1600_StatePer_fu_390_ap_start_reg;
    grp_fu_452_p4 <= input_r_q0(15 downto 8);
    grp_fu_462_p4 <= input_r_q1(15 downto 8);
    i_13_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(start_1_load_reg_1452),8));
    i_14_fu_967_p2 <= std_logic_vector(unsigned(i_1_reg_337) + unsigned(ap_const_lv8_1));
    i_15_fu_1270_p2 <= std_logic_vector(unsigned(i_2_reg_359) + unsigned(ap_const_lv2_1));
    i_fu_584_p2 <= std_logic_vector(unsigned(i_0_reg_304) + unsigned(ap_const_lv5_1));
    icmp_ln737_fu_578_p2 <= "1" when (i_0_reg_304 = ap_const_lv5_19) else "0";
    icmp_ln745_fu_749_p2 <= "1" when (p_01_reg_315 = ap_const_lv16_0) else "0";
    icmp_ln750_fu_813_p2 <= "1" when (unsigned(sum_reg_1461) < unsigned(ap_const_lv16_15)) else "0";
    icmp_ln755_fu_884_p2 <= "1" when (unsigned(ap_phi_mux_i_1_phi_fu_340_p4) < unsigned(zext_ln755_cast5_reg_1504)) else "0";
    icmp_ln767_fu_1208_p2 <= "1" when (end_2_reg_1472 = ap_const_lv5_15) else "0";
    icmp_ln769_1_fu_1213_p2 <= "0" when (sum_reg_1461 = ap_const_lv16_15) else "1";
    icmp_ln769_2_fu_1218_p2 <= "1" when (p_01_reg_315 = ap_const_lv16_15) else "0";
    icmp_ln769_fu_743_p2 <= "1" when (trunc_ln769_fu_740_p1 = ap_const_lv5_0) else "0";
    icmp_ln789_fu_1265_p2 <= "1" when (i_2_reg_359 = tmp_8_reg_1467) else "0";
    icmp_ln792_fu_1344_p2 <= "1" when (j_0_reg_370 = ap_const_lv3_4) else "0";
    inlen_cast_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inlen),16));

    input_r_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, p_0_idx22_cast_fu_898_p1, zext_ln761_fu_941_p1, ap_block_pp1_stage1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                input_r_address0 <= zext_ln761_fu_941_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                input_r_address0 <= p_0_idx22_cast_fu_898_p1(10 - 1 downto 0);
            else 
                input_r_address0 <= "XXXXXXXXXX";
            end if;
        else 
            input_r_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, zext_ln760_fu_914_p1, ap_block_pp1_stage1, zext_ln762_fu_956_p1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                input_r_address1 <= zext_ln762_fu_956_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                input_r_address1 <= zext_ln760_fu_914_p1(10 - 1 downto 0);
            else 
                input_r_address1 <= "XXXXXXXXXX";
            end if;
        else 
            input_r_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_1350_p2 <= std_logic_vector(unsigned(j_0_reg_370) + unsigned(ap_const_lv3_1));
    or_ln760_fu_903_p2 <= (empty_28_fu_889_p1 or ap_const_lv11_1);
    or_ln761_fu_931_p2 <= (empty_28_reg_1518 or ap_const_lv11_2);
    or_ln762_fu_946_p2 <= (empty_28_reg_1518 or ap_const_lv11_3);
    or_ln769_fu_1229_p2 <= (icmp_ln769_1_fu_1213_p2 or and_ln769_fu_1224_p2);
    output_r_address0 <= zext_ln794_2_fu_1393_p1(4 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= (trunc_ln794_fu_1366_p1 & trunc_ln9_fu_1356_p4);

    output_r_we0_assign_proc : process(ap_CS_fsm_state15, icmp_ln792_fu_1344_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln792_fu_1344_p2 = ap_const_lv1_0))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_0_idx22_cast_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_idx22_fu_893_p2),64));
    p_0_idx22_fu_893_p2 <= std_logic_vector(unsigned(empty_28_fu_889_p1) + unsigned(trunc_ln745_reg_1486));
    p_Result_8_fu_981_p9 <= (((((((empty_32_fu_977_p1 & grp_fu_462_p4) & empty_31_fu_973_p1) & grp_fu_452_p4) & empty_30_reg_1549) & input_load_12_1_reg_1554) & empty_29_reg_1539) & input_load_1_reg_1544);
    
    p_Result_s_fu_779_p4_proc : process(p_20, xor_ln786_fu_773_p2)
    begin
        p_Result_s_fu_779_p4 <= p_20;
        p_Result_s_fu_779_p4(63) <= xor_ln786_fu_773_p2(0);
    end process;

    p_cast4_cast_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(start_1_load_reg_1452),6));
    r_3_fu_1280_p26 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_359),5));
    r_4_fu_1398_p4 <= r_2_reg_381(63 downto 16);
    r_5_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_4_fu_1398_p4),64));
    reset_read_read_fu_226_p2 <= reset;
    select_ln776_fu_1250_p3 <= 
        ap_const_lv5_0 when (icmp_ln767_reg_1579(0) = '1') else 
        end_2_reg_1472;
        sext_ln755_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_862_p3),34));

    shl_ln_fu_1336_p3 <= (i_2_reg_359 & ap_const_lv2_0);
    sub_ln755_fu_856_p2 <= std_logic_vector(unsigned(zext_ln755_fu_852_p1) - unsigned(p_cast4_cast_fu_844_p1));
    sub_ln775_fu_1239_p2 <= std_logic_vector(unsigned(p_01_reg_315) - unsigned(zext_ln750_reg_1499));
    sum_fu_759_p2 <= std_logic_vector(unsigned(zext_ln749_fu_755_p1) + unsigned(p_01_reg_315));
    tmp_10_fu_765_p3 <= p_20(63 downto 63);
    tmp_4_fu_862_p3 <= (sub_ln755_fu_856_p2 & ap_const_lv2_0);
    trunc_ln745_fu_831_p1 <= p_0_idx_reg_325(11 - 1 downto 0);
    trunc_ln749_fu_804_p1 <= p_01_reg_315(5 - 1 downto 0);
    trunc_ln763_fu_919_p1 <= ap_phi_mux_i_1_phi_fu_340_p4(5 - 1 downto 0);
    trunc_ln769_fu_740_p1 <= outlen(5 - 1 downto 0);
    trunc_ln794_fu_1366_p1 <= r_2_reg_381(8 - 1 downto 0);
    trunc_ln9_fu_1356_p4 <= r_2_reg_381(15 downto 8);
    umax3_fu_847_p3 <= 
        start_1_load_reg_1452 when (empty_27_reg_1481(0) = '1') else 
        end_2_reg_1472;
    xor_ln763_fu_1052_p2 <= (tmp_5_fu_997_p27 xor p_Result_8_fu_981_p9);
    xor_ln786_fu_773_p2 <= (tmp_10_fu_765_p3 xor ap_const_lv1_1);
    zext_ln749_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(start_1),16));
    zext_ln750_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(end_2_reg_1472),16));
    zext_ln755_1_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln755_fu_870_p1),64));
    zext_ln755_cast5_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(end_2_reg_1472),8));
    zext_ln755_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(umax3_fu_847_p3),6));
    zext_ln760_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln760_fu_909_p2),64));
    zext_ln761_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln761_fu_936_p2),64));
    zext_ln762_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln762_fu_951_p2),64));
    zext_ln775_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(start_1),16));
    zext_ln794_1_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_offset),4));
    zext_ln794_2_fu_1393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln794_1_fu_1388_p2),64));
    zext_ln794_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_370),4));
end behav;
