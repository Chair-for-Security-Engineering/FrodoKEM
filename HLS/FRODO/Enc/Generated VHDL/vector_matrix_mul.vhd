-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity vector_matrix_mul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_vec_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_vec_ce0 : OUT STD_LOGIC;
    output_vec_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_vec_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_vec_ce1 : OUT STD_LOGIC;
    output_vec_we1 : OUT STD_LOGIC;
    output_vec_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    S_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    S_ce0 : OUT STD_LOGIC;
    S_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    A_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_1_ce0 : OUT STD_LOGIC;
    A_1_we0 : OUT STD_LOGIC;
    A_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    A_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    A_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_1_ce1 : OUT STD_LOGIC;
    A_1_we1 : OUT STD_LOGIC;
    A_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    A_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_2_ce0 : OUT STD_LOGIC;
    A_2_we0 : OUT STD_LOGIC;
    A_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    A_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    A_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_2_ce1 : OUT STD_LOGIC;
    A_2_we1 : OUT STD_LOGIC;
    A_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    E_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    E_ce0 : OUT STD_LOGIC;
    E_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    seed_A_separated_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    seed_A_separated_ce0 : OUT STD_LOGIC;
    seed_A_separated_we0 : OUT STD_LOGIC;
    seed_A_separated_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    seed_A_separated_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    seed_A_separated_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    seed_A_separated_ce1 : OUT STD_LOGIC;
    seed_A_separated_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    pk_req_din : OUT STD_LOGIC;
    pk_req_full_n : IN STD_LOGIC;
    pk_req_write : OUT STD_LOGIC;
    pk_rsp_empty_n : IN STD_LOGIC;
    pk_rsp_read : OUT STD_LOGIC;
    pk_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    pk_datain : IN STD_LOGIC_VECTOR (15 downto 0);
    pk_dataout : OUT STD_LOGIC_VECTOR (15 downto 0);
    pk_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    pregen : IN STD_LOGIC_VECTOR (0 downto 0);
    n : IN STD_LOGIC_VECTOR (9 downto 0);
    use_A : IN STD_LOGIC_VECTOR (0 downto 0);
    begin_r : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of vector_matrix_mul is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv18_8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_27F : STD_LOGIC_VECTOR (9 downto 0) := "1001111111";
    constant ap_const_lv17_10 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_const_lv17_8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_const_lv16_F : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001111";
    constant ap_const_lv10_27E : STD_LOGIC_VECTOR (9 downto 0) := "1001111110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal unpack_rest : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal begin_read_read_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pregen_read_read_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal seed_A_separated_add_reg_435 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln585_fu_317_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln585_reg_440 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal k_fu_327_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_reg_447 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln585_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln592_fu_357_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln592_reg_457 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln603_1_fu_377_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln603_1_reg_467 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln617_1_fu_392_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln617_1_reg_472 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln622_fu_410_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_frodo_unpack_8_fu_280_ap_ready : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_ap_done : STD_LOGIC;
    signal ap_predicate_op69_call_state7 : BOOLEAN;
    signal grp_scalar_vector_mul_fu_296_ap_ready : STD_LOGIC;
    signal grp_scalar_vector_mul_fu_296_ap_done : STD_LOGIC;
    signal ap_predicate_op71_call_state7 : BOOLEAN;
    signal grp_shake128_10240_1_fu_221_ap_ready : STD_LOGIC;
    signal grp_shake128_10240_1_fu_221_ap_done : STD_LOGIC;
    signal ap_predicate_op74_call_state7 : BOOLEAN;
    signal ap_predicate_op75_call_state7 : BOOLEAN;
    signal ap_predicate_op77_call_state7 : BOOLEAN;
    signal ap_predicate_op79_call_state7 : BOOLEAN;
    signal ap_predicate_op81_call_state7 : BOOLEAN;
    signal ap_predicate_op82_call_state7 : BOOLEAN;
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal grp_shake128_10240_1_fu_221_ap_start : STD_LOGIC;
    signal grp_shake128_10240_1_fu_221_ap_idle : STD_LOGIC;
    signal grp_shake128_10240_1_fu_221_output_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_shake128_10240_1_fu_221_output_r_ce0 : STD_LOGIC;
    signal grp_shake128_10240_1_fu_221_output_r_we0 : STD_LOGIC;
    signal grp_shake128_10240_1_fu_221_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_shake128_10240_1_fu_221_output_r_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_shake128_10240_1_fu_221_output_r_ce1 : STD_LOGIC;
    signal grp_shake128_10240_1_fu_221_output_r_we1 : STD_LOGIC;
    signal grp_shake128_10240_1_fu_221_output_r_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_shake128_10240_1_fu_221_input_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_shake128_10240_1_fu_221_input_r_ce0 : STD_LOGIC;
    signal grp_shake128_10240_1_fu_221_input_r_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_shake128_10240_1_fu_221_input_r_ce1 : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_ap_start : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_ap_idle : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_out_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_frodo_unpack_8_fu_280_out_r_ce0 : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_out_r_we0 : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_out_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_frodo_unpack_8_fu_280_in_r_req_din : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_in_r_req_write : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_in_r_rsp_read : STD_LOGIC;
    signal grp_frodo_unpack_8_fu_280_in_r_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_frodo_unpack_8_fu_280_in_r_dataout : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_frodo_unpack_8_fu_280_in_r_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_frodo_unpack_8_fu_280_in_offset : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_frodo_unpack_8_fu_280_previous_rest : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_frodo_unpack_8_fu_280_rest_len : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_frodo_unpack_8_fu_280_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_scalar_vector_mul_fu_296_ap_start : STD_LOGIC;
    signal grp_scalar_vector_mul_fu_296_ap_idle : STD_LOGIC;
    signal grp_scalar_vector_mul_fu_296_output_vec_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_scalar_vector_mul_fu_296_output_vec_ce0 : STD_LOGIC;
    signal grp_scalar_vector_mul_fu_296_output_vec_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_scalar_vector_mul_fu_296_output_vec_ce1 : STD_LOGIC;
    signal grp_scalar_vector_mul_fu_296_output_vec_we1 : STD_LOGIC;
    signal grp_scalar_vector_mul_fu_296_output_vec_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_scalar_vector_mul_fu_296_input_vec_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_scalar_vector_mul_fu_296_input_vec_ce0 : STD_LOGIC;
    signal grp_scalar_vector_mul_fu_296_input_vec_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_scalar_vector_mul_fu_296_E_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_scalar_vector_mul_fu_296_E_ce0 : STD_LOGIC;
    signal k_0_reg_184 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_predicate_op28_call_state4 : BOOLEAN;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal offset_0_reg_196 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_offset_2_phi_fu_211_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal offset_fu_397_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_shake128_10240_1_fu_221_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_frodo_unpack_8_fu_280_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state7_on_subcall_idle : BOOLEAN;
    signal grp_scalar_vector_mul_fu_296_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln592_fu_352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_fu_347_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln587_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln587_fu_339_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln603_fu_362_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln603_fu_366_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln617_fu_382_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln617_fu_386_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln622_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);

    component shake128_10240_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_r_ce1 : OUT STD_LOGIC;
        output_r_we1 : OUT STD_LOGIC;
        output_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component frodo_unpack_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        in_r_req_din : OUT STD_LOGIC;
        in_r_req_full_n : IN STD_LOGIC;
        in_r_req_write : OUT STD_LOGIC;
        in_r_rsp_empty_n : IN STD_LOGIC;
        in_r_rsp_read : OUT STD_LOGIC;
        in_r_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_r_datain : IN STD_LOGIC_VECTOR (15 downto 0);
        in_r_dataout : OUT STD_LOGIC_VECTOR (15 downto 0);
        in_r_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_offset : IN STD_LOGIC_VECTOR (17 downto 0);
        previous_rest : IN STD_LOGIC_VECTOR (15 downto 0);
        rest_len : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component scalar_vector_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_vec_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_vec_ce0 : OUT STD_LOGIC;
        output_vec_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_vec_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_vec_ce1 : OUT STD_LOGIC;
        output_vec_we1 : OUT STD_LOGIC;
        output_vec_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_vec_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_vec_ce0 : OUT STD_LOGIC;
        input_vec_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scalar : IN STD_LOGIC_VECTOR (6 downto 0);
        n : IN STD_LOGIC_VECTOR (9 downto 0);
        index : IN STD_LOGIC_VECTOR (9 downto 0);
        E_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        E_ce0 : OUT STD_LOGIC;
        E_q0 : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;



begin
    grp_shake128_10240_1_fu_221 : component shake128_10240_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake128_10240_1_fu_221_ap_start,
        ap_done => grp_shake128_10240_1_fu_221_ap_done,
        ap_idle => grp_shake128_10240_1_fu_221_ap_idle,
        ap_ready => grp_shake128_10240_1_fu_221_ap_ready,
        output_r_address0 => grp_shake128_10240_1_fu_221_output_r_address0,
        output_r_ce0 => grp_shake128_10240_1_fu_221_output_r_ce0,
        output_r_we0 => grp_shake128_10240_1_fu_221_output_r_we0,
        output_r_d0 => grp_shake128_10240_1_fu_221_output_r_d0,
        output_r_address1 => grp_shake128_10240_1_fu_221_output_r_address1,
        output_r_ce1 => grp_shake128_10240_1_fu_221_output_r_ce1,
        output_r_we1 => grp_shake128_10240_1_fu_221_output_r_we1,
        output_r_d1 => grp_shake128_10240_1_fu_221_output_r_d1,
        input_r_address0 => grp_shake128_10240_1_fu_221_input_r_address0,
        input_r_ce0 => grp_shake128_10240_1_fu_221_input_r_ce0,
        input_r_q0 => seed_A_separated_q0,
        input_r_address1 => grp_shake128_10240_1_fu_221_input_r_address1,
        input_r_ce1 => grp_shake128_10240_1_fu_221_input_r_ce1,
        input_r_q1 => seed_A_separated_q1);

    grp_frodo_unpack_8_fu_280 : component frodo_unpack_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_frodo_unpack_8_fu_280_ap_start,
        ap_done => grp_frodo_unpack_8_fu_280_ap_done,
        ap_idle => grp_frodo_unpack_8_fu_280_ap_idle,
        ap_ready => grp_frodo_unpack_8_fu_280_ap_ready,
        out_r_address0 => grp_frodo_unpack_8_fu_280_out_r_address0,
        out_r_ce0 => grp_frodo_unpack_8_fu_280_out_r_ce0,
        out_r_we0 => grp_frodo_unpack_8_fu_280_out_r_we0,
        out_r_d0 => grp_frodo_unpack_8_fu_280_out_r_d0,
        in_r_req_din => grp_frodo_unpack_8_fu_280_in_r_req_din,
        in_r_req_full_n => pk_req_full_n,
        in_r_req_write => grp_frodo_unpack_8_fu_280_in_r_req_write,
        in_r_rsp_empty_n => pk_rsp_empty_n,
        in_r_rsp_read => grp_frodo_unpack_8_fu_280_in_r_rsp_read,
        in_r_address => grp_frodo_unpack_8_fu_280_in_r_address,
        in_r_datain => pk_datain,
        in_r_dataout => grp_frodo_unpack_8_fu_280_in_r_dataout,
        in_r_size => grp_frodo_unpack_8_fu_280_in_r_size,
        in_offset => grp_frodo_unpack_8_fu_280_in_offset,
        previous_rest => grp_frodo_unpack_8_fu_280_previous_rest,
        rest_len => grp_frodo_unpack_8_fu_280_rest_len,
        ap_return => grp_frodo_unpack_8_fu_280_ap_return);

    grp_scalar_vector_mul_fu_296 : component scalar_vector_mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scalar_vector_mul_fu_296_ap_start,
        ap_done => grp_scalar_vector_mul_fu_296_ap_done,
        ap_idle => grp_scalar_vector_mul_fu_296_ap_idle,
        ap_ready => grp_scalar_vector_mul_fu_296_ap_ready,
        output_vec_address0 => grp_scalar_vector_mul_fu_296_output_vec_address0,
        output_vec_ce0 => grp_scalar_vector_mul_fu_296_output_vec_ce0,
        output_vec_q0 => output_vec_q0,
        output_vec_address1 => grp_scalar_vector_mul_fu_296_output_vec_address1,
        output_vec_ce1 => grp_scalar_vector_mul_fu_296_output_vec_ce1,
        output_vec_we1 => grp_scalar_vector_mul_fu_296_output_vec_we1,
        output_vec_d1 => grp_scalar_vector_mul_fu_296_output_vec_d1,
        input_vec_address0 => grp_scalar_vector_mul_fu_296_input_vec_address0,
        input_vec_ce0 => grp_scalar_vector_mul_fu_296_input_vec_ce0,
        input_vec_q0 => grp_scalar_vector_mul_fu_296_input_vec_q0,
        scalar => sext_ln592_reg_457,
        n => n,
        index => k_0_reg_184,
        E_address0 => grp_scalar_vector_mul_fu_296_E_address0,
        E_ce0 => grp_scalar_vector_mul_fu_296_E_ce0,
        E_q0 => E_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_frodo_unpack_8_fu_280_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_frodo_unpack_8_fu_280_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (pregen = ap_const_lv1_1) and (use_A = ap_const_lv1_0) and (begin_read_read_fu_132_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_0)))) then 
                    grp_frodo_unpack_8_fu_280_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_frodo_unpack_8_fu_280_ap_ready = ap_const_logic_1)) then 
                    grp_frodo_unpack_8_fu_280_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_scalar_vector_mul_fu_296_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scalar_vector_mul_fu_296_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_0)))) then 
                    grp_scalar_vector_mul_fu_296_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scalar_vector_mul_fu_296_ap_ready = ap_const_logic_1)) then 
                    grp_scalar_vector_mul_fu_296_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake128_10240_1_fu_221_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake128_10240_1_fu_221_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_1)))) then 
                    grp_shake128_10240_1_fu_221_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake128_10240_1_fu_221_ap_ready = ap_const_logic_1)) then 
                    grp_shake128_10240_1_fu_221_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    k_0_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                k_0_reg_184 <= k_reg_447;
            elsif (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                k_0_reg_184 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    offset_0_reg_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                offset_0_reg_196 <= select_ln622_fu_410_p3;
            elsif (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                offset_0_reg_196 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (begin_read_read_fu_132_p2 = ap_const_lv1_1))) then
                k_reg_447 <= k_fu_327_p2;
                trunc_ln585_reg_440 <= trunc_ln585_fu_317_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                sext_ln592_reg_457 <= sext_ln592_fu_357_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_frodo_unpack_8_fu_280_ap_done = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_0)))) then
                unpack_rest <= grp_frodo_unpack_8_fu_280_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_0))) then
                    zext_ln603_1_reg_467(16 downto 0) <= zext_ln603_1_fu_377_p1(16 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_0))) then
                    zext_ln617_1_reg_472(16 downto 0) <= zext_ln617_1_fu_392_p1(16 downto 0);
            end if;
        end if;
    end process;
    zext_ln603_1_reg_467(17) <= '0';
    zext_ln617_1_reg_472(17) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, pregen, use_A, begin_read_read_fu_132_p2, pregen_read_read_fu_150_p2, ap_CS_fsm_state5, icmp_ln585_fu_321_p2, ap_CS_fsm_state7, grp_frodo_unpack_8_fu_280_ap_done, ap_block_state7_on_subcall_done, ap_CS_fsm_state4, ap_block_state4_on_subcall_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (pregen = ap_const_lv1_1) and (use_A = ap_const_lv1_1) and (begin_read_read_fu_132_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (pregen = ap_const_lv1_1) and (use_A = ap_const_lv1_0) and (begin_read_read_fu_132_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (pregen_read_read_fu_150_p2 = ap_const_lv1_0) and (begin_read_read_fu_132_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (begin_read_read_fu_132_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_frodo_unpack_8_fu_280_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln585_fu_321_p2 = ap_const_lv1_1) or (begin_read_read_fu_132_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;

    A_1_address0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op69_call_state7, ap_predicate_op74_call_state7, ap_predicate_op79_call_state7, ap_predicate_op82_call_state7, grp_shake128_10240_1_fu_221_output_r_address0, grp_frodo_unpack_8_fu_280_out_r_address0, grp_scalar_vector_mul_fu_296_input_vec_address0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)))) then 
            A_1_address0 <= grp_scalar_vector_mul_fu_296_input_vec_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op69_call_state7 = ap_const_boolean_1))) then 
            A_1_address0 <= grp_frodo_unpack_8_fu_280_out_r_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op74_call_state7 = ap_const_boolean_1))) then 
            A_1_address0 <= grp_shake128_10240_1_fu_221_output_r_address0;
        else 
            A_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    A_1_address1 <= grp_shake128_10240_1_fu_221_output_r_address1;

    A_1_ce0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op69_call_state7, ap_predicate_op74_call_state7, ap_predicate_op79_call_state7, ap_predicate_op82_call_state7, grp_shake128_10240_1_fu_221_output_r_ce0, grp_frodo_unpack_8_fu_280_out_r_ce0, grp_scalar_vector_mul_fu_296_input_vec_ce0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)))) then 
            A_1_ce0 <= grp_scalar_vector_mul_fu_296_input_vec_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op69_call_state7 = ap_const_boolean_1))) then 
            A_1_ce0 <= grp_frodo_unpack_8_fu_280_out_r_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op74_call_state7 = ap_const_boolean_1))) then 
            A_1_ce0 <= grp_shake128_10240_1_fu_221_output_r_ce0;
        else 
            A_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_1_ce1_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op74_call_state7, grp_shake128_10240_1_fu_221_output_r_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op74_call_state7 = ap_const_boolean_1))) then 
            A_1_ce1 <= grp_shake128_10240_1_fu_221_output_r_ce1;
        else 
            A_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_1_d0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op69_call_state7, ap_predicate_op74_call_state7, grp_shake128_10240_1_fu_221_output_r_d0, grp_frodo_unpack_8_fu_280_out_r_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
            if ((ap_predicate_op69_call_state7 = ap_const_boolean_1)) then 
                A_1_d0 <= grp_frodo_unpack_8_fu_280_out_r_d0;
            elsif ((ap_predicate_op74_call_state7 = ap_const_boolean_1)) then 
                A_1_d0 <= grp_shake128_10240_1_fu_221_output_r_d0;
            else 
                A_1_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            A_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    A_1_d1 <= grp_shake128_10240_1_fu_221_output_r_d1;

    A_1_we0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op69_call_state7, ap_predicate_op74_call_state7, grp_shake128_10240_1_fu_221_output_r_we0, grp_frodo_unpack_8_fu_280_out_r_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
            if ((ap_predicate_op69_call_state7 = ap_const_boolean_1)) then 
                A_1_we0 <= grp_frodo_unpack_8_fu_280_out_r_we0;
            elsif ((ap_predicate_op74_call_state7 = ap_const_boolean_1)) then 
                A_1_we0 <= grp_shake128_10240_1_fu_221_output_r_we0;
            else 
                A_1_we0 <= ap_const_logic_0;
            end if;
        else 
            A_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_1_we1_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op74_call_state7, grp_shake128_10240_1_fu_221_output_r_we1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op74_call_state7 = ap_const_boolean_1))) then 
            A_1_we1 <= grp_shake128_10240_1_fu_221_output_r_we1;
        else 
            A_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    A_2_address0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op71_call_state7, ap_predicate_op75_call_state7, ap_predicate_op77_call_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_output_r_address0, grp_frodo_unpack_8_fu_280_out_r_address0, grp_scalar_vector_mul_fu_296_input_vec_address0, ap_CS_fsm_state4, ap_predicate_op28_call_state4, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)))) then 
            A_2_address0 <= grp_scalar_vector_mul_fu_296_input_vec_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op77_call_state7 = ap_const_boolean_1)))) then 
            A_2_address0 <= grp_frodo_unpack_8_fu_280_out_r_address0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)))) then 
            A_2_address0 <= grp_shake128_10240_1_fu_221_output_r_address0;
        else 
            A_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    A_2_address1 <= grp_shake128_10240_1_fu_221_output_r_address1;

    A_2_ce0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op71_call_state7, ap_predicate_op75_call_state7, ap_predicate_op77_call_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_output_r_ce0, grp_frodo_unpack_8_fu_280_out_r_ce0, grp_scalar_vector_mul_fu_296_input_vec_ce0, ap_CS_fsm_state4, ap_predicate_op28_call_state4, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)))) then 
            A_2_ce0 <= grp_scalar_vector_mul_fu_296_input_vec_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op77_call_state7 = ap_const_boolean_1)))) then 
            A_2_ce0 <= grp_frodo_unpack_8_fu_280_out_r_ce0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)))) then 
            A_2_ce0 <= grp_shake128_10240_1_fu_221_output_r_ce0;
        else 
            A_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_2_ce1_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_output_r_ce1, ap_CS_fsm_state4, ap_predicate_op28_call_state4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)))) then 
            A_2_ce1 <= grp_shake128_10240_1_fu_221_output_r_ce1;
        else 
            A_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_2_d0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op77_call_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_output_r_d0, grp_frodo_unpack_8_fu_280_out_r_d0, ap_CS_fsm_state4, ap_predicate_op28_call_state4, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op77_call_state7 = ap_const_boolean_1)))) then 
            A_2_d0 <= grp_frodo_unpack_8_fu_280_out_r_d0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)))) then 
            A_2_d0 <= grp_shake128_10240_1_fu_221_output_r_d0;
        else 
            A_2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    A_2_d1 <= grp_shake128_10240_1_fu_221_output_r_d1;

    A_2_we0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op77_call_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_output_r_we0, grp_frodo_unpack_8_fu_280_out_r_we0, ap_CS_fsm_state4, ap_predicate_op28_call_state4, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op77_call_state7 = ap_const_boolean_1)))) then 
            A_2_we0 <= grp_frodo_unpack_8_fu_280_out_r_we0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)))) then 
            A_2_we0 <= grp_shake128_10240_1_fu_221_output_r_we0;
        else 
            A_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_2_we1_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_output_r_we1, ap_CS_fsm_state4, ap_predicate_op28_call_state4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)))) then 
            A_2_we1 <= grp_shake128_10240_1_fu_221_output_r_we1;
        else 
            A_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    E_address0 <= grp_scalar_vector_mul_fu_296_E_address0;

    E_ce0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op71_call_state7, ap_predicate_op75_call_state7, ap_predicate_op79_call_state7, ap_predicate_op82_call_state7, grp_scalar_vector_mul_fu_296_E_ce0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)))) then 
            E_ce0 <= grp_scalar_vector_mul_fu_296_E_ce0;
        else 
            E_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    S_address0 <= zext_ln592_fu_352_p1(10 - 1 downto 0);

    S_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            S_ce0 <= ap_const_logic_1;
        else 
            S_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln603_fu_366_p2 <= std_logic_vector(unsigned(zext_ln603_fu_362_p1) + unsigned(ap_const_lv17_10));
    add_ln617_fu_386_p2 <= std_logic_vector(unsigned(zext_ln617_fu_382_p1) + unsigned(ap_const_lv17_8));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state4_on_subcall_done_assign_proc : process(grp_shake128_10240_1_fu_221_ap_done, ap_predicate_op28_call_state4)
    begin
                ap_block_state4_on_subcall_done <= ((grp_shake128_10240_1_fu_221_ap_done = ap_const_logic_0) and (ap_predicate_op28_call_state4 = ap_const_boolean_1));
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(grp_frodo_unpack_8_fu_280_ap_done, ap_predicate_op69_call_state7, grp_scalar_vector_mul_fu_296_ap_done, ap_predicate_op71_call_state7, grp_shake128_10240_1_fu_221_ap_done, ap_predicate_op74_call_state7, ap_predicate_op75_call_state7, ap_predicate_op77_call_state7, ap_predicate_op79_call_state7, ap_predicate_op81_call_state7, ap_predicate_op82_call_state7)
    begin
                ap_block_state7_on_subcall_done <= (((grp_shake128_10240_1_fu_221_ap_done = ap_const_logic_0) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)) or ((grp_shake128_10240_1_fu_221_ap_done = ap_const_logic_0) and (ap_predicate_op74_call_state7 = ap_const_boolean_1)) or ((grp_scalar_vector_mul_fu_296_ap_done = ap_const_logic_0) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((grp_scalar_vector_mul_fu_296_ap_done = ap_const_logic_0) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)) or ((grp_scalar_vector_mul_fu_296_ap_done = ap_const_logic_0) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((grp_scalar_vector_mul_fu_296_ap_done = ap_const_logic_0) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)) or ((grp_frodo_unpack_8_fu_280_ap_done = ap_const_logic_0) and (ap_predicate_op77_call_state7 = ap_const_boolean_1)) or ((grp_frodo_unpack_8_fu_280_ap_done = ap_const_logic_0) and (ap_predicate_op69_call_state7 = ap_const_boolean_1)));
    end process;


    ap_block_state7_on_subcall_idle_assign_proc : process(ap_predicate_op69_call_state7, ap_predicate_op71_call_state7, ap_predicate_op74_call_state7, ap_predicate_op75_call_state7, ap_predicate_op77_call_state7, ap_predicate_op79_call_state7, ap_predicate_op81_call_state7, ap_predicate_op82_call_state7, grp_shake128_10240_1_fu_221_ap_idle, grp_frodo_unpack_8_fu_280_ap_idle, grp_scalar_vector_mul_fu_296_ap_idle)
    begin
                ap_block_state7_on_subcall_idle <= (((grp_scalar_vector_mul_fu_296_ap_idle = ap_const_logic_0) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((grp_shake128_10240_1_fu_221_ap_idle = ap_const_logic_0) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)) or ((grp_scalar_vector_mul_fu_296_ap_idle = ap_const_logic_0) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)) or ((grp_frodo_unpack_8_fu_280_ap_idle = ap_const_logic_0) and (ap_predicate_op77_call_state7 = ap_const_boolean_1)) or ((grp_scalar_vector_mul_fu_296_ap_idle = ap_const_logic_0) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((grp_shake128_10240_1_fu_221_ap_idle = ap_const_logic_0) and (ap_predicate_op74_call_state7 = ap_const_boolean_1)) or ((grp_scalar_vector_mul_fu_296_ap_idle = ap_const_logic_0) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)) or ((grp_frodo_unpack_8_fu_280_ap_idle = ap_const_logic_0) and (ap_predicate_op69_call_state7 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, begin_read_read_fu_132_p2, ap_CS_fsm_state5, icmp_ln585_fu_321_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln585_fu_321_p2 = ap_const_lv1_1) or (begin_read_read_fu_132_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_offset_2_phi_fu_211_p6_assign_proc : process(use_A, trunc_ln585_reg_440, ap_CS_fsm_state7, offset_0_reg_196, offset_fu_397_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_0))) then 
            ap_phi_mux_offset_2_phi_fu_211_p6 <= offset_fu_397_p2;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln585_reg_440 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_1)))) then 
            ap_phi_mux_offset_2_phi_fu_211_p6 <= offset_0_reg_196;
        else 
            ap_phi_mux_offset_2_phi_fu_211_p6 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_predicate_op28_call_state4_assign_proc : process(pregen, use_A)
    begin
                ap_predicate_op28_call_state4 <= ((pregen = ap_const_lv1_1) and (use_A = ap_const_lv1_1));
    end process;


    ap_predicate_op69_call_state7_assign_proc : process(use_A, trunc_ln585_reg_440)
    begin
                ap_predicate_op69_call_state7 <= ((trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_0));
    end process;


    ap_predicate_op71_call_state7_assign_proc : process(use_A, trunc_ln585_reg_440)
    begin
                ap_predicate_op71_call_state7 <= ((trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_0));
    end process;


    ap_predicate_op74_call_state7_assign_proc : process(use_A, trunc_ln585_reg_440)
    begin
                ap_predicate_op74_call_state7 <= ((trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_1));
    end process;


    ap_predicate_op75_call_state7_assign_proc : process(use_A, trunc_ln585_reg_440)
    begin
                ap_predicate_op75_call_state7 <= ((trunc_ln585_reg_440 = ap_const_lv1_0) and (use_A = ap_const_lv1_1));
    end process;


    ap_predicate_op77_call_state7_assign_proc : process(use_A, trunc_ln585_reg_440)
    begin
                ap_predicate_op77_call_state7 <= ((trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_0));
    end process;


    ap_predicate_op79_call_state7_assign_proc : process(use_A, trunc_ln585_reg_440)
    begin
                ap_predicate_op79_call_state7 <= ((trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_0));
    end process;


    ap_predicate_op81_call_state7_assign_proc : process(use_A, trunc_ln585_reg_440)
    begin
                ap_predicate_op81_call_state7 <= ((trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_1));
    end process;


    ap_predicate_op82_call_state7_assign_proc : process(use_A, trunc_ln585_reg_440)
    begin
                ap_predicate_op82_call_state7 <= ((trunc_ln585_reg_440 = ap_const_lv1_1) and (use_A = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(begin_read_read_fu_132_p2, ap_CS_fsm_state5, icmp_ln585_fu_321_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln585_fu_321_p2 = ap_const_lv1_1) or (begin_read_read_fu_132_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    begin_read_read_fu_132_p2 <= begin_r;
    grp_frodo_unpack_8_fu_280_ap_start <= grp_frodo_unpack_8_fu_280_ap_start_reg;

    grp_frodo_unpack_8_fu_280_in_offset_assign_proc : process(zext_ln603_1_reg_467, zext_ln617_1_reg_472, ap_CS_fsm_state7, ap_predicate_op69_call_state7, ap_predicate_op77_call_state7, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op77_call_state7 = ap_const_boolean_1))) then 
            grp_frodo_unpack_8_fu_280_in_offset <= zext_ln617_1_reg_472;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op69_call_state7 = ap_const_boolean_1))) then 
            grp_frodo_unpack_8_fu_280_in_offset <= zext_ln603_1_reg_467;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_frodo_unpack_8_fu_280_in_offset <= ap_const_lv18_8;
        else 
            grp_frodo_unpack_8_fu_280_in_offset <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_frodo_unpack_8_fu_280_previous_rest_assign_proc : process(unpack_rest, ap_CS_fsm_state7, ap_predicate_op69_call_state7, ap_predicate_op77_call_state7, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op69_call_state7 = ap_const_boolean_1))) then 
            grp_frodo_unpack_8_fu_280_previous_rest <= unpack_rest;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op77_call_state7 = ap_const_boolean_1)))) then 
            grp_frodo_unpack_8_fu_280_previous_rest <= ap_const_lv16_0;
        else 
            grp_frodo_unpack_8_fu_280_previous_rest <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_frodo_unpack_8_fu_280_rest_len_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op69_call_state7, ap_predicate_op77_call_state7, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op69_call_state7 = ap_const_boolean_1))) then 
            grp_frodo_unpack_8_fu_280_rest_len <= ap_const_lv6_8;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op77_call_state7 = ap_const_boolean_1)))) then 
            grp_frodo_unpack_8_fu_280_rest_len <= ap_const_lv6_10;
        else 
            grp_frodo_unpack_8_fu_280_rest_len <= "XXXXXX";
        end if; 
    end process;

    grp_scalar_vector_mul_fu_296_ap_start <= grp_scalar_vector_mul_fu_296_ap_start_reg;

    grp_scalar_vector_mul_fu_296_input_vec_q0_assign_proc : process(A_1_q0, A_2_q0, ap_CS_fsm_state7, ap_predicate_op71_call_state7, ap_predicate_op75_call_state7, ap_predicate_op79_call_state7, ap_predicate_op82_call_state7)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)))) then 
            grp_scalar_vector_mul_fu_296_input_vec_q0 <= A_1_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)))) then 
            grp_scalar_vector_mul_fu_296_input_vec_q0 <= A_2_q0;
        else 
            grp_scalar_vector_mul_fu_296_input_vec_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_shake128_10240_1_fu_221_ap_start <= grp_shake128_10240_1_fu_221_ap_start_reg;
    icmp_ln585_fu_321_p2 <= "1" when (k_0_reg_184 = ap_const_lv10_280) else "0";
    icmp_ln587_fu_333_p2 <= "1" when (k_0_reg_184 = ap_const_lv10_27F) else "0";
    icmp_ln622_fu_404_p2 <= "1" when (k_0_reg_184 = ap_const_lv10_27E) else "0";
    k_fu_327_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(k_0_reg_184));
    offset_fu_397_p2 <= std_logic_vector(unsigned(offset_0_reg_196) + unsigned(ap_const_lv16_F));
    output_vec_address0 <= grp_scalar_vector_mul_fu_296_output_vec_address0;
    output_vec_address1 <= grp_scalar_vector_mul_fu_296_output_vec_address1;

    output_vec_ce0_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op71_call_state7, ap_predicate_op75_call_state7, ap_predicate_op79_call_state7, ap_predicate_op82_call_state7, grp_scalar_vector_mul_fu_296_output_vec_ce0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)))) then 
            output_vec_ce0 <= grp_scalar_vector_mul_fu_296_output_vec_ce0;
        else 
            output_vec_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_vec_ce1_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op71_call_state7, ap_predicate_op75_call_state7, ap_predicate_op79_call_state7, ap_predicate_op82_call_state7, grp_scalar_vector_mul_fu_296_output_vec_ce1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)))) then 
            output_vec_ce1 <= grp_scalar_vector_mul_fu_296_output_vec_ce1;
        else 
            output_vec_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_vec_d1 <= grp_scalar_vector_mul_fu_296_output_vec_d1;

    output_vec_we1_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op71_call_state7, ap_predicate_op75_call_state7, ap_predicate_op79_call_state7, ap_predicate_op82_call_state7, grp_scalar_vector_mul_fu_296_output_vec_we1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op82_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op79_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op75_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op71_call_state7 = ap_const_boolean_1)))) then 
            output_vec_we1 <= grp_scalar_vector_mul_fu_296_output_vec_we1;
        else 
            output_vec_we1 <= ap_const_logic_0;
        end if; 
    end process;

    pk_address <= grp_frodo_unpack_8_fu_280_in_r_address;
    pk_dataout <= grp_frodo_unpack_8_fu_280_in_r_dataout;
    pk_req_din <= grp_frodo_unpack_8_fu_280_in_r_req_din;
    pk_req_write <= grp_frodo_unpack_8_fu_280_in_r_req_write;
    pk_rsp_read <= grp_frodo_unpack_8_fu_280_in_r_rsp_read;
    pk_size <= grp_frodo_unpack_8_fu_280_in_r_size;
    pregen_read_read_fu_150_p2 <= pregen;
    seed_A_separated_add_reg_435 <= ap_const_lv64_0(4 - 1 downto 0);

    seed_A_separated_address0_assign_proc : process(ap_CS_fsm_state1, seed_A_separated_add_reg_435, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_predicate_op74_call_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_input_r_address0, ap_CS_fsm_state4, ap_predicate_op28_call_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            seed_A_separated_address0 <= seed_A_separated_add_reg_435;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            seed_A_separated_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op74_call_state7 = ap_const_boolean_1)))) then 
            seed_A_separated_address0 <= grp_shake128_10240_1_fu_221_input_r_address0;
        else 
            seed_A_separated_address0 <= "XXXX";
        end if; 
    end process;

    seed_A_separated_address1 <= grp_shake128_10240_1_fu_221_input_r_address1;

    seed_A_separated_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_predicate_op74_call_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_input_r_ce0, ap_CS_fsm_state4, ap_predicate_op28_call_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            seed_A_separated_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op74_call_state7 = ap_const_boolean_1)))) then 
            seed_A_separated_ce0 <= grp_shake128_10240_1_fu_221_input_r_ce0;
        else 
            seed_A_separated_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    seed_A_separated_ce1_assign_proc : process(ap_CS_fsm_state7, ap_predicate_op74_call_state7, ap_predicate_op81_call_state7, grp_shake128_10240_1_fu_221_input_r_ce1, ap_CS_fsm_state4, ap_predicate_op28_call_state4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op28_call_state4 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op81_call_state7 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op74_call_state7 = ap_const_boolean_1)))) then 
            seed_A_separated_ce1 <= grp_shake128_10240_1_fu_221_input_r_ce1;
        else 
            seed_A_separated_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    seed_A_separated_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state5, zext_ln587_fu_347_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            seed_A_separated_d0 <= zext_ln587_fu_347_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            seed_A_separated_d0 <= ap_const_lv16_0;
        else 
            seed_A_separated_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    seed_A_separated_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, pregen, use_A, begin_read_read_fu_132_p2, ap_CS_fsm_state5, icmp_ln585_fu_321_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (pregen = ap_const_lv1_1) and (use_A = ap_const_lv1_1) and (begin_read_read_fu_132_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln585_fu_321_p2 = ap_const_lv1_0) and (begin_read_read_fu_132_p2 = ap_const_lv1_1)))) then 
            seed_A_separated_we0 <= ap_const_logic_1;
        else 
            seed_A_separated_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln587_fu_339_p3 <= 
        ap_const_lv10_0 when (icmp_ln587_fu_333_p2(0) = '1') else 
        k_fu_327_p2;
    select_ln622_fu_410_p3 <= 
        ap_const_lv16_0 when (icmp_ln622_fu_404_p2(0) = '1') else 
        ap_phi_mux_offset_2_phi_fu_211_p6;
        sext_ln592_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(S_q0),7));

    trunc_ln585_fu_317_p1 <= k_0_reg_184(1 - 1 downto 0);
    zext_ln587_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln587_fu_339_p3),16));
    zext_ln592_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_reg_184),64));
    zext_ln603_1_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln603_fu_366_p2),18));
    zext_ln603_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_0_reg_196),17));
    zext_ln617_1_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln617_fu_386_p2),18));
    zext_ln617_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_0_reg_196),17));
end behav;
