-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity absorb_block is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    outlen : IN STD_LOGIC_VECTOR (5 downto 0);
    inlen : IN STD_LOGIC_VECTOR (7 downto 0);
    reset : IN STD_LOGIC_VECTOR (0 downto 0);
    start_word : IN STD_LOGIC_VECTOR (7 downto 0);
    begin_r : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of absorb_block is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal i_1_reg_376 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_rec_reg_387 : STD_LOGIC_VECTOR (63 downto 0);
    signal begin_read_read_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reset_read_read_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inlen_cast_fu_642_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal inlen_cast_reg_1428 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_fu_652_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln766_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln766_reg_1441 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sum_fu_831_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_reg_1449 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln742_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal end_fu_849_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal end_reg_1455 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln742_fu_857_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln742_reg_1463 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln6_reg_1468 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln742_fu_900_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln742_reg_1473 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln747_fu_904_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln747_reg_1481 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln752_cast_fu_907_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln752_cast_reg_1486 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln752_fu_954_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln752_reg_1491 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln752_fu_960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln752_reg_1496 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal empty_41_fu_965_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_41_reg_1500 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln760_fu_995_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln760_reg_1516 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_42_fu_999_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_42_reg_1520 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state7_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal grp_fu_577_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_1_reg_1525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal empty_43_fu_1003_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_43_reg_1530 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_587_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_9_1_reg_1535 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln761_fu_1097_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln761_reg_1675 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_16_fu_1103_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_16_reg_1680 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln764_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln764_reg_1685 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal or_ln766_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln766_reg_1690 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln772_fu_1316_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_KeccakF1600_StatePer_fu_519_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_ap_done : STD_LOGIC;
    signal ap_predicate_op285_call_state10 : BOOLEAN;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal ret_end_1_fu_1320_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_17_fu_1331_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_17_reg_1707 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal shl_ln_fu_1337_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_reg_1712 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln787_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_1351_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal r_4_fu_1404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln790_fu_1345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal grp_KeccakF1600_StatePer_fu_519_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_0_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_0_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_5_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_5_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_10_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_10_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_15_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_15_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_20_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_20_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_1_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_1_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_6_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_6_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_11_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_11_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_16_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_16_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_21_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_21_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_2_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_2_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_7_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_7_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_12_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_12_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_17_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_17_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_22_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_22_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_3_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_3_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_8_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_8_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_13_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_13_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_18_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_18_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_23_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_23_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_4_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_4_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_9_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_9_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_14_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_14_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_19_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_19_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_519_p_24_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_p_24_o_ap_vld : STD_LOGIC;
    signal ap_phi_mux_i_0_phi_fu_324_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_reg_320 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln734_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_15_reg_331 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_02_reg_343 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_end_0_reg_353 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_01_idx_reg_364 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_i_1_phi_fu_379_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_p_1_rec_phi_fu_391_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter0_UnifiedRetVal_i_reg_399 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_i_2_phi_fu_458_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_reg_454 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_phi_mux_r_1_phi_fu_468_p18 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_0_reg_489 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_2_reg_500 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_reg_510 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakF1600_StatePer_fu_519_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_01_idx22_cast_fu_974_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln757_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln758_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal zext_ln759_fu_1032_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln792_1_fu_1389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln760_fu_1133_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_875_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln746_fu_819_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln746_fu_823_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln746_1_fu_827_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln747_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln746_1_fu_837_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_861_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln784_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal umax12_fu_920_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal umax12_cast_fu_928_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast55_fu_910_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln752_fu_932_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_fu_938_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln752_fu_946_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln752_fu_950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_01_idx22_fu_969_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln757_fu_979_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln757_fu_985_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln758_fu_1007_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln758_fu_1012_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln759_fu_1022_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln759_fu_1027_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_45_fu_1113_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_44_fu_1109_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1117_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln766_2_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln766_1_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln766_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln792_fu_1367_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln8_fu_1357_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln792_fu_1380_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln792_fu_1384_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_3_fu_1394_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_379 : BOOLEAN;
    signal ap_condition_193 : BOOLEAN;

    component KeccakF1600_StatePer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_0_o_ap_vld : OUT STD_LOGIC;
        p_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_5_o_ap_vld : OUT STD_LOGIC;
        p_10_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_10_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_10_o_ap_vld : OUT STD_LOGIC;
        p_15_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_15_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_15_o_ap_vld : OUT STD_LOGIC;
        p_20_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_20_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_20_o_ap_vld : OUT STD_LOGIC;
        p_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_1_o_ap_vld : OUT STD_LOGIC;
        p_6_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_6_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_6_o_ap_vld : OUT STD_LOGIC;
        p_11_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_11_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_11_o_ap_vld : OUT STD_LOGIC;
        p_16_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_16_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_16_o_ap_vld : OUT STD_LOGIC;
        p_21_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_21_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_21_o_ap_vld : OUT STD_LOGIC;
        p_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_2_o_ap_vld : OUT STD_LOGIC;
        p_7_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_7_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_7_o_ap_vld : OUT STD_LOGIC;
        p_12_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_12_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_12_o_ap_vld : OUT STD_LOGIC;
        p_17_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_17_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_17_o_ap_vld : OUT STD_LOGIC;
        p_22_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_22_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_22_o_ap_vld : OUT STD_LOGIC;
        p_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_3_o_ap_vld : OUT STD_LOGIC;
        p_8_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_8_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_8_o_ap_vld : OUT STD_LOGIC;
        p_13_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_13_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_13_o_ap_vld : OUT STD_LOGIC;
        p_18_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_18_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_18_o_ap_vld : OUT STD_LOGIC;
        p_23_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_23_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_23_o_ap_vld : OUT STD_LOGIC;
        p_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_4_o_ap_vld : OUT STD_LOGIC;
        p_9_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_9_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_9_o_ap_vld : OUT STD_LOGIC;
        p_14_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_14_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_14_o_ap_vld : OUT STD_LOGIC;
        p_19_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_19_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_19_o_ap_vld : OUT STD_LOGIC;
        p_24_i : IN STD_LOGIC_VECTOR (63 downto 0);
        p_24_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_24_o_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_KeccakF1600_StatePer_fu_519 : component KeccakF1600_StatePer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePer_fu_519_ap_start,
        ap_done => grp_KeccakF1600_StatePer_fu_519_ap_done,
        ap_idle => grp_KeccakF1600_StatePer_fu_519_ap_idle,
        ap_ready => grp_KeccakF1600_StatePer_fu_519_ap_ready,
        p_0_i => p_0,
        p_0_o => grp_KeccakF1600_StatePer_fu_519_p_0_o,
        p_0_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_0_o_ap_vld,
        p_5_i => p_5,
        p_5_o => grp_KeccakF1600_StatePer_fu_519_p_5_o,
        p_5_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_5_o_ap_vld,
        p_10_i => p_10,
        p_10_o => grp_KeccakF1600_StatePer_fu_519_p_10_o,
        p_10_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_10_o_ap_vld,
        p_15_i => p_15,
        p_15_o => grp_KeccakF1600_StatePer_fu_519_p_15_o,
        p_15_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_15_o_ap_vld,
        p_20_i => p_20,
        p_20_o => grp_KeccakF1600_StatePer_fu_519_p_20_o,
        p_20_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_20_o_ap_vld,
        p_1_i => p_1,
        p_1_o => grp_KeccakF1600_StatePer_fu_519_p_1_o,
        p_1_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_1_o_ap_vld,
        p_6_i => p_6,
        p_6_o => grp_KeccakF1600_StatePer_fu_519_p_6_o,
        p_6_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_6_o_ap_vld,
        p_11_i => p_11,
        p_11_o => grp_KeccakF1600_StatePer_fu_519_p_11_o,
        p_11_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_11_o_ap_vld,
        p_16_i => p_16,
        p_16_o => grp_KeccakF1600_StatePer_fu_519_p_16_o,
        p_16_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_16_o_ap_vld,
        p_21_i => p_21,
        p_21_o => grp_KeccakF1600_StatePer_fu_519_p_21_o,
        p_21_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_21_o_ap_vld,
        p_2_i => p_2,
        p_2_o => grp_KeccakF1600_StatePer_fu_519_p_2_o,
        p_2_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_2_o_ap_vld,
        p_7_i => p_7,
        p_7_o => grp_KeccakF1600_StatePer_fu_519_p_7_o,
        p_7_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_7_o_ap_vld,
        p_12_i => p_12,
        p_12_o => grp_KeccakF1600_StatePer_fu_519_p_12_o,
        p_12_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_12_o_ap_vld,
        p_17_i => p_17,
        p_17_o => grp_KeccakF1600_StatePer_fu_519_p_17_o,
        p_17_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_17_o_ap_vld,
        p_22_i => p_22,
        p_22_o => grp_KeccakF1600_StatePer_fu_519_p_22_o,
        p_22_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_22_o_ap_vld,
        p_3_i => p_3,
        p_3_o => grp_KeccakF1600_StatePer_fu_519_p_3_o,
        p_3_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_3_o_ap_vld,
        p_8_i => p_8,
        p_8_o => grp_KeccakF1600_StatePer_fu_519_p_8_o,
        p_8_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_8_o_ap_vld,
        p_13_i => p_13,
        p_13_o => grp_KeccakF1600_StatePer_fu_519_p_13_o,
        p_13_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_13_o_ap_vld,
        p_18_i => p_18,
        p_18_o => grp_KeccakF1600_StatePer_fu_519_p_18_o,
        p_18_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_18_o_ap_vld,
        p_23_i => p_23,
        p_23_o => grp_KeccakF1600_StatePer_fu_519_p_23_o,
        p_23_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_23_o_ap_vld,
        p_4_i => p_4,
        p_4_o => grp_KeccakF1600_StatePer_fu_519_p_4_o,
        p_4_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_4_o_ap_vld,
        p_9_i => p_9,
        p_9_o => grp_KeccakF1600_StatePer_fu_519_p_9_o,
        p_9_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_9_o_ap_vld,
        p_14_i => p_14,
        p_14_o => grp_KeccakF1600_StatePer_fu_519_p_14_o,
        p_14_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_14_o_ap_vld,
        p_19_i => p_19,
        p_19_o => grp_KeccakF1600_StatePer_fu_519_p_19_o,
        p_19_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_19_o_ap_vld,
        p_24_i => p_24,
        p_24_o => grp_KeccakF1600_StatePer_fu_519_p_24_o,
        p_24_o_ap_vld => grp_KeccakF1600_StatePer_fu_519_p_24_o_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_return_preg <= p_0_reg_510;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePer_fu_519_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePer_fu_519_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (or_ln766_fu_1310_p2 = ap_const_lv1_1) and (icmp_ln764_fu_1289_p2 = ap_const_lv1_1)))) then 
                    grp_KeccakF1600_StatePer_fu_519_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePer_fu_519_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePer_fu_519_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_193)) then
                if ((ap_const_boolean_1 = ap_condition_379)) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_24;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_17) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_23;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_16) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_22;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_15) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_21;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_14) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_20;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_13) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_19;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_12) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_18;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_11) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_17;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_10) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_16;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_F) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_15;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_E) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_14;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_D) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_13;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_C) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_12;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_B) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_11;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_A) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_10;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_9) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_9;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_8) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_8;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_7) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_7;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_6) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_6;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_5) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_5;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_4) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_4;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_3) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_3;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_2) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_2;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_1) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_1;
                elsif (((trunc_ln760_reg_1516 = ap_const_lv5_0) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= p_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399 <= ap_phi_reg_pp1_iter0_UnifiedRetVal_i_reg_399;
                end if;
            end if; 
        end if;
    end process;

    i_0_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((reset_read_read_fu_248_p2 = ap_const_lv1_1) and (begin_read_read_fu_236_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_320 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                i_0_reg_320 <= i_fu_652_p2;
            end if; 
        end if;
    end process;

    i_15_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_15_reg_331 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_15_reg_331 <= start_word;
            end if; 
        end if;
    end process;

    i_1_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                i_1_reg_376 <= i_16_reg_1680;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_1_reg_376 <= i_15_reg_331;
            end if; 
        end if;
    end process;

    i_2_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln790_fu_1345_p2 = ap_const_lv1_1))) then 
                i_2_reg_454 <= i_17_reg_1707;
            elsif (((grp_KeccakF1600_StatePer_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_2_reg_454 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_0_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln790_fu_1345_p2 = ap_const_lv1_0))) then 
                j_0_reg_489 <= j_fu_1351_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
                j_0_reg_489 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_0 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_0 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_0_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_0 <= grp_KeccakF1600_StatePer_fu_519_p_0_o;
            end if; 
        end if;
    end process;

    p_01_idx_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                p_01_idx_reg_364 <= add_ln752_reg_1491;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_01_idx_reg_364 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_02_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                p_02_reg_343 <= sub_ln772_fu_1316_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_02_reg_343 <= inlen_cast_reg_1428;
            end if; 
        end if;
    end process;

    p_0_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((begin_read_read_fu_236_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_0_reg_510 <= start_word;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln787_fu_1326_p2 = ap_const_lv1_1) or (icmp_ln766_reg_1441 = ap_const_lv1_1)))) then 
                p_0_reg_510 <= zext_ln742_reg_1463;
            end if; 
        end if;
    end process;

    p_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_1 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_1 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_1_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_1 <= grp_KeccakF1600_StatePer_fu_519_p_1_o;
            end if; 
        end if;
    end process;

    p_10_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_A) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_10 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_A) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_10 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_10_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_10_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_10 <= grp_KeccakF1600_StatePer_fu_519_p_10_o;
            end if; 
        end if;
    end process;

    p_11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_B) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_11 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_B) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_11 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_11_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_11_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_11 <= grp_KeccakF1600_StatePer_fu_519_p_11_o;
            end if; 
        end if;
    end process;

    p_12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_12 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_C) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_12 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_12_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_12_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_12 <= grp_KeccakF1600_StatePer_fu_519_p_12_o;
            end if; 
        end if;
    end process;

    p_13_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_D) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_13 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_D) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_13 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_13_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_13_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_13 <= grp_KeccakF1600_StatePer_fu_519_p_13_o;
            end if; 
        end if;
    end process;

    p_14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_E) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_14 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_E) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_14 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_14_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_14_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_14 <= grp_KeccakF1600_StatePer_fu_519_p_14_o;
            end if; 
        end if;
    end process;

    p_15_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_15 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_F) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_15 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_15_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_15_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_15 <= grp_KeccakF1600_StatePer_fu_519_p_15_o;
            end if; 
        end if;
    end process;

    p_16_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_10) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_16 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_10) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_16 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_16_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_16_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_16 <= grp_KeccakF1600_StatePer_fu_519_p_16_o;
            end if; 
        end if;
    end process;

    p_17_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_11) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_17 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_11) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_17 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_17_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_17_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_17 <= grp_KeccakF1600_StatePer_fu_519_p_17_o;
            end if; 
        end if;
    end process;

    p_18_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_12) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_18 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_12) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_18 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_18_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_18_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_18 <= grp_KeccakF1600_StatePer_fu_519_p_18_o;
            end if; 
        end if;
    end process;

    p_19_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_13) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_19 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_13) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_19 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_19_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_19_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_19 <= grp_KeccakF1600_StatePer_fu_519_p_19_o;
            end if; 
        end if;
    end process;

    p_1_rec_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
                p_1_rec_reg_387 <= add_ln761_reg_1675;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_1_rec_reg_387 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_2 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_2 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_2_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_2 <= grp_KeccakF1600_StatePer_fu_519_p_2_o;
            end if; 
        end if;
    end process;

    p_20_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_14) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_20 <= xor_ln760_fu_1133_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln742_fu_813_p2 = ap_const_lv1_1) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
                p_20 <= p_Result_s_fu_875_p4;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_14) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_20 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_20_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_20_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_20 <= grp_KeccakF1600_StatePer_fu_519_p_20_o;
            end if; 
        end if;
    end process;

    p_21_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_15) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_21 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_15) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_21 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_21_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_21_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_21 <= grp_KeccakF1600_StatePer_fu_519_p_21_o;
            end if; 
        end if;
    end process;

    p_22_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_16) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_22 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_16) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_22 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_22_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_22_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_22 <= grp_KeccakF1600_StatePer_fu_519_p_22_o;
            end if; 
        end if;
    end process;

    p_23_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_17) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_23 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_17) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_23 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_23_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_23_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_23 <= grp_KeccakF1600_StatePer_fu_519_p_23_o;
            end if; 
        end if;
    end process;

    p_24_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and ((trunc_ln760_reg_1516 = ap_const_lv5_18) or ((trunc_ln760_reg_1516 = ap_const_lv5_19) or ((trunc_ln760_reg_1516 = ap_const_lv5_1A) or ((trunc_ln760_reg_1516 = ap_const_lv5_1B) or ((trunc_ln760_reg_1516 = ap_const_lv5_1C) or ((trunc_ln760_reg_1516 = ap_const_lv5_1D) or ((trunc_ln760_reg_1516 = ap_const_lv5_1E) or (trunc_ln760_reg_1516 = ap_const_lv5_1F)))))))))) then 
                p_24 <= xor_ln760_fu_1133_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (((((((((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_1E) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0)) or ((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_1F) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_1D) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_1C) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_1B) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_1A) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_19) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) or ((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_18) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))))) then 
                p_24 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_24_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_24_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_24 <= grp_KeccakF1600_StatePer_fu_519_p_24_o;
            end if; 
        end if;
    end process;

    p_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_3 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_3 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_3_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_3 <= grp_KeccakF1600_StatePer_fu_519_p_3_o;
            end if; 
        end if;
    end process;

    p_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_4) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_4 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_4) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_4 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_4_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_4_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_4 <= grp_KeccakF1600_StatePer_fu_519_p_4_o;
            end if; 
        end if;
    end process;

    p_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_5) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_5 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_5) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_5 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_5_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_5_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_5 <= grp_KeccakF1600_StatePer_fu_519_p_5_o;
            end if; 
        end if;
    end process;

    p_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_6 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_6) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_6 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_6_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_6_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_6 <= grp_KeccakF1600_StatePer_fu_519_p_6_o;
            end if; 
        end if;
    end process;

    p_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_7) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_7 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_7) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_7 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_7_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_7_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_7 <= grp_KeccakF1600_StatePer_fu_519_p_7_o;
            end if; 
        end if;
    end process;

    p_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_8) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_8 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_8) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_8 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_8_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_8_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_8 <= grp_KeccakF1600_StatePer_fu_519_p_8_o;
            end if; 
        end if;
    end process;

    p_9_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (trunc_ln760_reg_1516 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_9 <= xor_ln760_fu_1133_p2;
            elsif (((ap_phi_mux_i_0_phi_fu_324_p4 = ap_const_lv5_9) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then 
                p_9 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_KeccakF1600_StatePer_fu_519_p_9_o_ap_vld = ap_const_logic_1)) or ((ap_predicate_op285_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePer_fu_519_p_9_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                p_9 <= grp_KeccakF1600_StatePer_fu_519_p_9_o;
            end if; 
        end if;
    end process;

    r_2_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln790_fu_1345_p2 = ap_const_lv1_0))) then 
                r_2_reg_500 <= r_4_fu_1404_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
                r_2_reg_500 <= ap_phi_mux_r_1_phi_fu_468_p18;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln752_reg_1491 <= add_ln752_fu_954_p2;
                trunc_ln742_reg_1473 <= trunc_ln742_fu_900_p1;
                    zext_ln747_reg_1481(4 downto 0) <= zext_ln747_fu_904_p1(4 downto 0);
                    zext_ln752_cast_reg_1486(4 downto 0) <= zext_ln752_cast_fu_907_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then
                add_ln761_reg_1675 <= add_ln761_fu_1097_p2;
                i_16_reg_1680 <= i_16_fu_1103_p2;
                input_load_1_reg_1525 <= input_r_q0(15 downto 8);
                input_load_9_1_reg_1535 <= input_r_q1(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln752_fu_960_p2 = ap_const_lv1_1))) then
                empty_41_reg_1500 <= empty_41_fu_965_p1;
                trunc_ln760_reg_1516 <= trunc_ln760_fu_995_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then
                empty_42_reg_1520 <= empty_42_fu_999_p1;
                empty_43_reg_1530 <= empty_43_fu_1003_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln742_fu_813_p2 = ap_const_lv1_0))) then
                end_reg_1455 <= end_fu_849_p3;
                sum_reg_1449 <= sum_fu_831_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then
                i_17_reg_1707 <= i_17_fu_1331_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln752_reg_1496 <= icmp_ln752_fu_960_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln764_reg_1685 <= icmp_ln764_fu_1289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln766_reg_1441 <= icmp_ln766_fu_808_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    inlen_cast_reg_1428(7 downto 0) <= inlen_cast_fu_642_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln764_fu_1289_p2 = ap_const_lv1_1))) then
                or_ln766_reg_1690 <= or_ln766_fu_1310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                ret_end_0_reg_353 <= ret_end_1_fu_1320_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then
                    shl_ln_reg_1712(4 downto 2) <= shl_ln_fu_1337_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln742_fu_813_p2 = ap_const_lv1_1) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then
                trunc_ln6_reg_1468 <= outlen(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln742_fu_813_p2 = ap_const_lv1_1))) then
                    zext_ln742_reg_1463(4 downto 0) <= zext_ln742_fu_857_p1(4 downto 0);
            end if;
        end if;
    end process;
    inlen_cast_reg_1428(15 downto 8) <= "00000000";
    zext_ln742_reg_1463(7 downto 5) <= "000";
    zext_ln747_reg_1481(15 downto 5) <= "00000000000";
    zext_ln752_cast_reg_1486(7 downto 5) <= "000";
    shl_ln_reg_1712(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, begin_read_read_fu_236_p2, reset_read_read_fu_248_p2, ap_CS_fsm_state2, icmp_ln766_reg_1441, ap_CS_fsm_state4, icmp_ln742_fu_813_p2, icmp_ln752_fu_960_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, grp_KeccakF1600_StatePer_fu_519_ap_done, ap_block_state10_on_subcall_done, ap_CS_fsm_state13, icmp_ln787_fu_1326_p2, ap_CS_fsm_state14, icmp_ln790_fu_1345_p2, ap_block_pp1_stage0_subdone, ap_block_pp1_stage1_subdone, icmp_ln734_fu_646_p2, ap_CS_fsm_state12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((reset_read_read_fu_248_p2 = ap_const_lv1_1) and (begin_read_read_fu_236_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((reset_read_read_fu_248_p2 = ap_const_lv1_0) and (begin_read_read_fu_236_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((begin_read_read_fu_236_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln734_fu_646_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln742_fu_813_p2 = ap_const_lv1_1) and (icmp_ln766_reg_1441 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln742_fu_813_p2 = ap_const_lv1_1) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln752_fu_960_p2 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln752_fu_960_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_KeccakF1600_StatePer_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln787_fu_1326_p2 = ap_const_lv1_1) or (icmp_ln766_reg_1441 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln790_fu_1345_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln746_1_fu_837_p2 <= std_logic_vector(unsigned(trunc_ln746_fu_823_p1) + unsigned(trunc_ln746_1_fu_827_p1));
    add_ln752_fu_954_p2 <= std_logic_vector(unsigned(zext_ln752_fu_950_p1) + unsigned(p_01_idx_reg_364));
    add_ln757_fu_985_p2 <= std_logic_vector(unsigned(or_ln757_fu_979_p2) + unsigned(trunc_ln742_reg_1473));
    add_ln758_fu_1012_p2 <= std_logic_vector(unsigned(or_ln758_fu_1007_p2) + unsigned(trunc_ln742_reg_1473));
    add_ln759_fu_1027_p2 <= std_logic_vector(unsigned(or_ln759_fu_1022_p2) + unsigned(trunc_ln742_reg_1473));
    add_ln761_fu_1097_p2 <= std_logic_vector(unsigned(p_1_rec_reg_387) + unsigned(ap_const_lv64_4));
    add_ln792_fu_1384_p2 <= std_logic_vector(unsigned(zext_ln792_fu_1380_p1) + unsigned(shl_ln_reg_1712));
    and_ln766_fu_1305_p2 <= (icmp_ln766_reg_1441 and icmp_ln766_2_fu_1299_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state14 <= ap_CS_fsm(12);
    ap_CS_fsm_state15 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state10_on_subcall_done_assign_proc : process(grp_KeccakF1600_StatePer_fu_519_ap_done, ap_predicate_op285_call_state10)
    begin
                ap_block_state10_on_subcall_done <= ((grp_KeccakF1600_StatePer_fu_519_ap_done = ap_const_logic_0) and (ap_predicate_op285_call_state10 = ap_const_boolean_1));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_193_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_193 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001));
    end process;


    ap_condition_379_assign_proc : process(icmp_ln752_reg_1496, trunc_ln760_reg_1516)
    begin
                ap_condition_379 <= (((((((((trunc_ln760_reg_1516 = ap_const_lv5_1E) and (icmp_ln752_reg_1496 = ap_const_lv1_1)) or ((trunc_ln760_reg_1516 = ap_const_lv5_1F) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) or ((trunc_ln760_reg_1516 = ap_const_lv5_1D) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) or ((trunc_ln760_reg_1516 = ap_const_lv5_1C) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) or ((trunc_ln760_reg_1516 = ap_const_lv5_1B) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) or ((trunc_ln760_reg_1516 = ap_const_lv5_1A) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) or ((trunc_ln760_reg_1516 = ap_const_lv5_19) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) or ((trunc_ln760_reg_1516 = ap_const_lv5_18) and (icmp_ln752_reg_1496 = ap_const_lv1_1)));
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln752_fu_960_p2)
    begin
        if ((icmp_ln752_fu_960_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i_0_phi_fu_324_p4 <= i_0_reg_320;

    ap_phi_mux_i_1_phi_fu_379_p4_assign_proc : process(i_1_reg_376, icmp_ln752_reg_1496, ap_CS_fsm_pp1_stage0, i_16_reg_1680, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
            ap_phi_mux_i_1_phi_fu_379_p4 <= i_16_reg_1680;
        else 
            ap_phi_mux_i_1_phi_fu_379_p4 <= i_1_reg_376;
        end if; 
    end process;

    ap_phi_mux_i_2_phi_fu_458_p4 <= i_2_reg_454;

    ap_phi_mux_p_1_rec_phi_fu_391_p4_assign_proc : process(p_1_rec_reg_387, icmp_ln752_reg_1496, ap_CS_fsm_pp1_stage0, add_ln761_reg_1675, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln752_reg_1496 = ap_const_lv1_1))) then 
            ap_phi_mux_p_1_rec_phi_fu_391_p4 <= add_ln761_reg_1675;
        else 
            ap_phi_mux_p_1_rec_phi_fu_391_p4 <= p_1_rec_reg_387;
        end if; 
    end process;


    ap_phi_mux_r_1_phi_fu_468_p18_assign_proc : process(p_0, p_1, p_2, p_3, p_4, p_5, p_6, p_7, p_24, icmp_ln766_reg_1441, ap_CS_fsm_state13, icmp_ln787_fu_1326_p2, ap_phi_mux_i_2_phi_fu_458_p4)
    begin
        if (not((ap_const_boolean_1 = ap_const_boolean_1))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_24;
        elsif (((ap_phi_mux_i_2_phi_fu_458_p4 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_7;
        elsif (((ap_phi_mux_i_2_phi_fu_458_p4 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_6;
        elsif (((ap_phi_mux_i_2_phi_fu_458_p4 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_5;
        elsif (((ap_phi_mux_i_2_phi_fu_458_p4 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_4;
        elsif (((ap_phi_mux_i_2_phi_fu_458_p4 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_3;
        elsif (((ap_phi_mux_i_2_phi_fu_458_p4 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_2;
        elsif (((ap_phi_mux_i_2_phi_fu_458_p4 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_1;
        elsif (((ap_phi_mux_i_2_phi_fu_458_p4 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln787_fu_1326_p2 = ap_const_lv1_0) and (icmp_ln766_reg_1441 = ap_const_lv1_0))) then 
            ap_phi_mux_r_1_phi_fu_468_p18 <= p_0;
        else 
            ap_phi_mux_r_1_phi_fu_468_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_UnifiedRetVal_i_reg_399 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op285_call_state10_assign_proc : process(icmp_ln764_reg_1685, or_ln766_reg_1690)
    begin
                ap_predicate_op285_call_state10 <= ((or_ln766_reg_1690 = ap_const_lv1_1) and (icmp_ln764_reg_1685 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(p_0_reg_510, ap_return_preg, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_return <= p_0_reg_510;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    begin_read_read_fu_236_p2 <= begin_r;
    empty_40_fu_914_p2 <= "1" when (unsigned(i_15_reg_331) > unsigned(zext_ln752_cast_fu_907_p1)) else "0";
    empty_41_fu_965_p1 <= ap_phi_mux_p_1_rec_phi_fu_391_p4(11 - 1 downto 0);
    empty_42_fu_999_p1 <= input_r_q0(8 - 1 downto 0);
    empty_43_fu_1003_p1 <= input_r_q1(8 - 1 downto 0);
    empty_44_fu_1109_p1 <= input_r_q0(8 - 1 downto 0);
    empty_45_fu_1113_p1 <= input_r_q1(8 - 1 downto 0);
    end_fu_849_p3 <= 
        add_ln746_1_fu_837_p2 when (icmp_ln747_fu_843_p2(0) = '1') else 
        ap_const_lv5_15;
    grp_KeccakF1600_StatePer_fu_519_ap_start <= grp_KeccakF1600_StatePer_fu_519_ap_start_reg;
    grp_fu_577_p4 <= input_r_q0(15 downto 8);
    grp_fu_587_p4 <= input_r_q1(15 downto 8);
    i_16_fu_1103_p2 <= std_logic_vector(unsigned(i_1_reg_376) + unsigned(ap_const_lv8_1));
    i_17_fu_1331_p2 <= std_logic_vector(unsigned(i_2_reg_454) + unsigned(ap_const_lv3_1));
    i_fu_652_p2 <= std_logic_vector(unsigned(i_0_reg_320) + unsigned(ap_const_lv5_1));
    icmp_ln734_fu_646_p2 <= "1" when (i_0_reg_320 = ap_const_lv5_19) else "0";
    icmp_ln742_fu_813_p2 <= "1" when (p_02_reg_343 = ap_const_lv16_0) else "0";
    icmp_ln747_fu_843_p2 <= "1" when (unsigned(sum_fu_831_p2) < unsigned(ap_const_lv16_15)) else "0";
    icmp_ln752_fu_960_p2 <= "1" when (unsigned(ap_phi_mux_i_1_phi_fu_379_p4) < unsigned(zext_ln752_cast_reg_1486)) else "0";
    icmp_ln764_fu_1289_p2 <= "1" when (end_reg_1455 = ap_const_lv5_15) else "0";
    icmp_ln766_1_fu_1294_p2 <= "0" when (sum_reg_1449 = ap_const_lv16_15) else "1";
    icmp_ln766_2_fu_1299_p2 <= "1" when (p_02_reg_343 = ap_const_lv16_15) else "0";
    icmp_ln766_fu_808_p2 <= "1" when (outlen = ap_const_lv6_0) else "0";
    icmp_ln787_fu_1326_p2 <= "1" when (i_2_reg_454 = trunc_ln6_reg_1468) else "0";
    icmp_ln790_fu_1345_p2 <= "1" when (j_0_reg_489 = ap_const_lv3_4) else "0";
    inlen_cast_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inlen),16));

    input_r_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, p_01_idx22_cast_fu_974_p1, zext_ln758_fu_1017_p1, ap_block_pp1_stage1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                input_r_address0 <= zext_ln758_fu_1017_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                input_r_address0 <= p_01_idx22_cast_fu_974_p1(10 - 1 downto 0);
            else 
                input_r_address0 <= "XXXXXXXXXX";
            end if;
        else 
            input_r_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, zext_ln757_fu_990_p1, ap_block_pp1_stage1, zext_ln759_fu_1032_p1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                input_r_address1 <= zext_ln759_fu_1032_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                input_r_address1 <= zext_ln757_fu_990_p1(10 - 1 downto 0);
            else 
                input_r_address1 <= "XXXXXXXXXX";
            end if;
        else 
            input_r_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_1351_p2 <= std_logic_vector(unsigned(j_0_reg_489) + unsigned(ap_const_lv3_1));
    or_ln757_fu_979_p2 <= (empty_41_fu_965_p1 or ap_const_lv11_1);
    or_ln758_fu_1007_p2 <= (empty_41_reg_1500 or ap_const_lv11_2);
    or_ln759_fu_1022_p2 <= (empty_41_reg_1500 or ap_const_lv11_3);
    or_ln766_fu_1310_p2 <= (icmp_ln766_1_fu_1294_p2 or and_ln766_fu_1305_p2);
    output_r_address0 <= zext_ln792_1_fu_1389_p1(4 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= (trunc_ln792_fu_1367_p1 & trunc_ln8_fu_1357_p4);

    output_r_we0_assign_proc : process(ap_CS_fsm_state14, icmp_ln790_fu_1345_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln790_fu_1345_p2 = ap_const_lv1_0))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_01_idx22_cast_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_01_idx22_fu_969_p2),64));
    p_01_idx22_fu_969_p2 <= std_logic_vector(unsigned(empty_41_fu_965_p1) + unsigned(trunc_ln742_reg_1473));
    p_Result_7_fu_1117_p9 <= (((((((empty_45_fu_1113_p1 & grp_fu_587_p4) & empty_44_fu_1109_p1) & grp_fu_577_p4) & empty_43_reg_1530) & input_load_9_1_reg_1535) & empty_42_reg_1520) & input_load_1_reg_1525);
    
    p_Result_s_fu_875_p4_proc : process(p_20, xor_ln784_fu_869_p2)
    begin
        p_Result_s_fu_875_p4 <= p_20;
        p_Result_s_fu_875_p4(63) <= xor_ln784_fu_869_p2(0);
    end process;

    p_cast55_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_15_reg_331),9));
    r_3_fu_1394_p4 <= r_2_reg_500(63 downto 16);
    r_4_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_3_fu_1394_p4),64));
    reset_read_read_fu_248_p2 <= reset;
    ret_end_1_fu_1320_p3 <= 
        ap_const_lv5_0 when (icmp_ln764_reg_1685(0) = '1') else 
        end_reg_1455;
        sext_ln752_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_938_p3),34));

    shl_ln_fu_1337_p3 <= (i_2_reg_454 & ap_const_lv2_0);
    sub_ln752_fu_932_p2 <= std_logic_vector(unsigned(umax12_cast_fu_928_p1) - unsigned(p_cast55_fu_910_p1));
    sub_ln772_fu_1316_p2 <= std_logic_vector(unsigned(sum_reg_1449) - unsigned(zext_ln747_reg_1481));
    sum_fu_831_p2 <= std_logic_vector(unsigned(p_02_reg_343) + unsigned(zext_ln746_fu_819_p1));
    tmp_13_fu_938_p3 <= (sub_ln752_fu_932_p2 & ap_const_lv2_0);
    tmp_14_fu_861_p3 <= p_20(63 downto 63);
    trunc_ln742_fu_900_p1 <= p_01_idx_reg_364(11 - 1 downto 0);
    trunc_ln746_1_fu_827_p1 <= p_02_reg_343(5 - 1 downto 0);
    trunc_ln746_fu_823_p1 <= i_15_reg_331(5 - 1 downto 0);
    trunc_ln760_fu_995_p1 <= ap_phi_mux_i_1_phi_fu_379_p4(5 - 1 downto 0);
    trunc_ln792_fu_1367_p1 <= r_2_reg_500(8 - 1 downto 0);
    trunc_ln8_fu_1357_p4 <= r_2_reg_500(15 downto 8);
    umax12_cast_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(umax12_fu_920_p3),9));
    umax12_fu_920_p3 <= 
        i_15_reg_331 when (empty_40_fu_914_p2(0) = '1') else 
        zext_ln752_cast_fu_907_p1;
    xor_ln760_fu_1133_p2 <= (p_Result_7_fu_1117_p9 xor ap_phi_reg_pp1_iter1_UnifiedRetVal_i_reg_399);
    xor_ln784_fu_869_p2 <= (tmp_14_fu_861_p3 xor ap_const_lv1_1);
    zext_ln742_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_end_0_reg_353),8));
    zext_ln746_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_15_reg_331),16));
    zext_ln747_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(end_reg_1455),16));
    zext_ln752_cast_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(end_reg_1455),8));
    zext_ln752_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln752_fu_946_p1),64));
    zext_ln757_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln757_fu_985_p2),64));
    zext_ln758_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln758_fu_1012_p2),64));
    zext_ln759_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln759_fu_1027_p2),64));
    zext_ln792_1_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln792_fu_1384_p2),64));
    zext_ln792_fu_1380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_489),5));
end behav;
