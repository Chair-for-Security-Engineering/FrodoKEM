-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity shake128 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    outlen : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    inlen : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of shake128 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_A7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010100111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal s_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal s_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal i_1_reg_292 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_1_rec_reg_304 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_0_reg_448 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_0_reg_458 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln263_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln263_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln261_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln261_fu_815_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln261_reg_1323 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal end_fu_829_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal end_reg_1331 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln268_fu_848_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln268_reg_1338 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln268_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln268_reg_1343 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_859_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1347 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal empty_6_fu_899_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_6_reg_1362 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal grp_fu_523_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_1_reg_1367 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_8_fu_903_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_8_reg_1372 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_533_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_1_1_reg_1377 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln301_fu_947_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln301_reg_1502 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln308_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln308_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal sub_ln342_fu_1143_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_KeccakF1600_StatePer_fu_469_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_ap_done : STD_LOGIC;
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal trunc_ln350_fu_1155_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln350_reg_1519 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal end_1_fu_1175_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal end_1_reg_1524 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln358_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i_3_fu_1188_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_3_reg_1535 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln364_fu_1202_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln364_reg_1540 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln369_fu_1217_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln370_fu_1234_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln361_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln361_reg_1555 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state12_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_fu_1246_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal trunc_ln3_reg_1564 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln364_fu_1266_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln364_reg_1569 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln364_1_fu_1275_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln364_1_reg_1574 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_3_fu_1290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state12 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal grp_KeccakF1600_StatePer_fu_469_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_0_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_0_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_5_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_5_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_10_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_10_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_15_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_15_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_20_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_20_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_1_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_1_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_6_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_6_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_11_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_11_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_16_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_16_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_21_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_21_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_2_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_2_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_7_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_7_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_12_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_12_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_17_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_17_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_22_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_22_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_3_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_3_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_8_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_8_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_13_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_13_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_18_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_18_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_23_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_23_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_4_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_4_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_9_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_9_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_14_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_14_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_19_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_19_o_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_469_s_24_o : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_s_24_o_ap_vld : STD_LOGIC;
    signal p_03_reg_270 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_02_idx_reg_280 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_i_1_phi_fu_296_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_p_1_rec_phi_fu_308_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln276_reg_316 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln276_reg_316 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_01_reg_365 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_rec_reg_375 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_i_2_phi_fu_391_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_2_reg_387 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_phi_mux_r_1_phi_fu_401_p44 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_469_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln350_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_02_idx27_cast_fu_874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln273_1_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln274_1_fu_922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln275_1_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln364_1_fu_1301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal xor_ln276_fu_977_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln339_fu_1120_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_819_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_fu_836_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln268_fu_844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_1_rec_cast_fu_865_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_02_idx27_fu_869_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln273_fu_879_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln273_fu_885_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln273_fu_889_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln274_fu_907_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln274_fu_913_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln274_fu_917_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln275_fu_927_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln275_fu_933_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln275_fu_937_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_10_fu_957_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_9_fu_953_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_961_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln3_fu_1132_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln342_fu_1139_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln353_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2_fu_1165_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln4_fu_1194_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1_fu_1206_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln369_fu_1213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2_fu_1223_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln370_fu_1230_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln361_fu_1252_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln364_fu_1270_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_2_fu_1280_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_1265 : BOOLEAN;
    signal ap_condition_336 : BOOLEAN;
    signal ap_condition_157 : BOOLEAN;

    component KeccakF1600_StatePer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_0_o_ap_vld : OUT STD_LOGIC;
        s_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_5_o_ap_vld : OUT STD_LOGIC;
        s_10_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_10_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_10_o_ap_vld : OUT STD_LOGIC;
        s_15_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_15_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_15_o_ap_vld : OUT STD_LOGIC;
        s_20_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_20_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_20_o_ap_vld : OUT STD_LOGIC;
        s_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_1_o_ap_vld : OUT STD_LOGIC;
        s_6_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_6_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_6_o_ap_vld : OUT STD_LOGIC;
        s_11_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_11_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_11_o_ap_vld : OUT STD_LOGIC;
        s_16_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_16_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_16_o_ap_vld : OUT STD_LOGIC;
        s_21_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_21_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_21_o_ap_vld : OUT STD_LOGIC;
        s_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_2_o_ap_vld : OUT STD_LOGIC;
        s_7_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_7_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_7_o_ap_vld : OUT STD_LOGIC;
        s_12_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_12_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_12_o_ap_vld : OUT STD_LOGIC;
        s_17_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_17_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_17_o_ap_vld : OUT STD_LOGIC;
        s_22_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_22_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_22_o_ap_vld : OUT STD_LOGIC;
        s_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_3_o_ap_vld : OUT STD_LOGIC;
        s_8_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_8_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_8_o_ap_vld : OUT STD_LOGIC;
        s_13_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_13_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_13_o_ap_vld : OUT STD_LOGIC;
        s_18_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_18_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_18_o_ap_vld : OUT STD_LOGIC;
        s_23_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_23_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_23_o_ap_vld : OUT STD_LOGIC;
        s_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_4_o_ap_vld : OUT STD_LOGIC;
        s_9_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_9_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_9_o_ap_vld : OUT STD_LOGIC;
        s_14_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_14_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_14_o_ap_vld : OUT STD_LOGIC;
        s_19_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_19_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_19_o_ap_vld : OUT STD_LOGIC;
        s_24_i : IN STD_LOGIC_VECTOR (63 downto 0);
        s_24_o : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_24_o_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_KeccakF1600_StatePer_fu_469 : component KeccakF1600_StatePer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePer_fu_469_ap_start,
        ap_done => grp_KeccakF1600_StatePer_fu_469_ap_done,
        ap_idle => grp_KeccakF1600_StatePer_fu_469_ap_idle,
        ap_ready => grp_KeccakF1600_StatePer_fu_469_ap_ready,
        s_0_i => s_0,
        s_0_o => grp_KeccakF1600_StatePer_fu_469_s_0_o,
        s_0_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_0_o_ap_vld,
        s_5_i => s_5,
        s_5_o => grp_KeccakF1600_StatePer_fu_469_s_5_o,
        s_5_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_5_o_ap_vld,
        s_10_i => s_10,
        s_10_o => grp_KeccakF1600_StatePer_fu_469_s_10_o,
        s_10_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_10_o_ap_vld,
        s_15_i => s_15,
        s_15_o => grp_KeccakF1600_StatePer_fu_469_s_15_o,
        s_15_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_15_o_ap_vld,
        s_20_i => s_20,
        s_20_o => grp_KeccakF1600_StatePer_fu_469_s_20_o,
        s_20_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_20_o_ap_vld,
        s_1_i => s_1,
        s_1_o => grp_KeccakF1600_StatePer_fu_469_s_1_o,
        s_1_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_1_o_ap_vld,
        s_6_i => s_6,
        s_6_o => grp_KeccakF1600_StatePer_fu_469_s_6_o,
        s_6_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_6_o_ap_vld,
        s_11_i => s_11,
        s_11_o => grp_KeccakF1600_StatePer_fu_469_s_11_o,
        s_11_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_11_o_ap_vld,
        s_16_i => s_16,
        s_16_o => grp_KeccakF1600_StatePer_fu_469_s_16_o,
        s_16_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_16_o_ap_vld,
        s_21_i => s_21,
        s_21_o => grp_KeccakF1600_StatePer_fu_469_s_21_o,
        s_21_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_21_o_ap_vld,
        s_2_i => s_2,
        s_2_o => grp_KeccakF1600_StatePer_fu_469_s_2_o,
        s_2_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_2_o_ap_vld,
        s_7_i => s_7,
        s_7_o => grp_KeccakF1600_StatePer_fu_469_s_7_o,
        s_7_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_7_o_ap_vld,
        s_12_i => s_12,
        s_12_o => grp_KeccakF1600_StatePer_fu_469_s_12_o,
        s_12_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_12_o_ap_vld,
        s_17_i => s_17,
        s_17_o => grp_KeccakF1600_StatePer_fu_469_s_17_o,
        s_17_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_17_o_ap_vld,
        s_22_i => s_22,
        s_22_o => grp_KeccakF1600_StatePer_fu_469_s_22_o,
        s_22_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_22_o_ap_vld,
        s_3_i => s_3,
        s_3_o => grp_KeccakF1600_StatePer_fu_469_s_3_o,
        s_3_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_3_o_ap_vld,
        s_8_i => s_8,
        s_8_o => grp_KeccakF1600_StatePer_fu_469_s_8_o,
        s_8_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_8_o_ap_vld,
        s_13_i => s_13,
        s_13_o => grp_KeccakF1600_StatePer_fu_469_s_13_o,
        s_13_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_13_o_ap_vld,
        s_18_i => s_18,
        s_18_o => grp_KeccakF1600_StatePer_fu_469_s_18_o,
        s_18_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_18_o_ap_vld,
        s_23_i => s_23,
        s_23_o => grp_KeccakF1600_StatePer_fu_469_s_23_o,
        s_23_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_23_o_ap_vld,
        s_4_i => s_4,
        s_4_o => grp_KeccakF1600_StatePer_fu_469_s_4_o,
        s_4_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_4_o_ap_vld,
        s_9_i => s_9,
        s_9_o => grp_KeccakF1600_StatePer_fu_469_s_9_o,
        s_9_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_9_o_ap_vld,
        s_14_i => s_14,
        s_14_o => grp_KeccakF1600_StatePer_fu_469_s_14_o,
        s_14_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_14_o_ap_vld,
        s_19_i => s_19,
        s_19_o => grp_KeccakF1600_StatePer_fu_469_s_19_o,
        s_19_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_19_o_ap_vld,
        s_24_i => s_24,
        s_24_o => grp_KeccakF1600_StatePer_fu_469_s_24_o,
        s_24_o_ap_vld => grp_KeccakF1600_StatePer_fu_469_s_24_o_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln358_fu_1183_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state12);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln358_fu_1183_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePer_fu_469_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePer_fu_469_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln350_fu_1149_p2 = ap_const_lv1_0)) or ((icmp_ln308_fu_1115_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
                    grp_KeccakF1600_StatePer_fu_469_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePer_fu_469_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePer_fu_469_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_phi_ln276_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if ((ap_const_boolean_1 = ap_condition_336)) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_21;
                elsif (((i_1_reg_292 = ap_const_lv5_14) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_20;
                elsif (((i_1_reg_292 = ap_const_lv5_13) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_19;
                elsif (((i_1_reg_292 = ap_const_lv5_12) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_18;
                elsif (((i_1_reg_292 = ap_const_lv5_11) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_17;
                elsif (((i_1_reg_292 = ap_const_lv5_10) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_16;
                elsif (((i_1_reg_292 = ap_const_lv5_F) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_15;
                elsif (((i_1_reg_292 = ap_const_lv5_E) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_14;
                elsif (((i_1_reg_292 = ap_const_lv5_D) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_13;
                elsif (((i_1_reg_292 = ap_const_lv5_C) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_12;
                elsif (((i_1_reg_292 = ap_const_lv5_B) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_11;
                elsif (((i_1_reg_292 = ap_const_lv5_A) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_10;
                elsif (((i_1_reg_292 = ap_const_lv5_9) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_9;
                elsif (((i_1_reg_292 = ap_const_lv5_8) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_8;
                elsif (((i_1_reg_292 = ap_const_lv5_7) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_7;
                elsif (((i_1_reg_292 = ap_const_lv5_6) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_6;
                elsif (((i_1_reg_292 = ap_const_lv5_5) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_5;
                elsif (((i_1_reg_292 = ap_const_lv5_4) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_4;
                elsif (((i_1_reg_292 = ap_const_lv5_3) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_3;
                elsif (((i_1_reg_292 = ap_const_lv5_2) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_2;
                elsif (((i_1_reg_292 = ap_const_lv5_1) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_1;
                elsif (((i_1_reg_292 = ap_const_lv5_0) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= s_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_phi_ln276_reg_316 <= ap_phi_reg_pp0_iter0_phi_ln276_reg_316;
                end if;
            end if; 
        end if;
    end process;

    i_1_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                i_1_reg_292 <= i_reg_1347;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_1_reg_292 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_2_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                i_2_reg_387 <= i_3_reg_1535;
            elsif (((grp_KeccakF1600_StatePer_fu_469_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_2_reg_387 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_0_reg_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln361_fu_1240_p2 = ap_const_lv1_0))) then 
                j_0_reg_458 <= j_fu_1246_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln358_fu_1183_p2 = ap_const_lv1_0))) then 
                j_0_reg_458 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_01_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln261_fu_803_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_01_reg_365 <= outlen;
            elsif (((icmp_ln358_fu_1183_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                p_01_reg_365 <= sub_ln370_fu_1234_p2;
            end if; 
        end if;
    end process;

    p_02_idx_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_02_idx_reg_280 <= ap_const_lv64_0;
            elsif (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_02_idx_reg_280 <= add_ln268_reg_1338;
            end if; 
        end if;
    end process;

    p_03_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_03_reg_270 <= inlen;
            elsif (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_03_reg_270 <= sub_ln342_fu_1143_p2;
            end if; 
        end if;
    end process;

    p_0_rec_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln261_fu_803_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_0_rec_reg_375 <= ap_const_lv64_0;
            elsif (((icmp_ln358_fu_1183_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                p_0_rec_reg_375 <= add_ln369_fu_1217_p2;
            end if; 
        end if;
    end process;

    p_1_rec_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
                p_1_rec_reg_304 <= add_ln301_reg_1502;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_1_rec_reg_304 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    r_0_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln361_fu_1240_p2 = ap_const_lv1_0))) then 
                r_0_reg_448 <= r_3_fu_1290_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln358_fu_1183_p2 = ap_const_lv1_0))) then 
                r_0_reg_448 <= ap_phi_mux_r_1_phi_fu_401_p44;
            end if; 
        end if;
    end process;

    s_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_0 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_0 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_0 <= grp_KeccakF1600_StatePer_fu_469_s_0_o;
            end if; 
        end if;
    end process;

    s_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_1 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_1 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_1 <= grp_KeccakF1600_StatePer_fu_469_s_1_o;
            end if; 
        end if;
    end process;

    s_10_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_10 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_10 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_10_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_10_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_10 <= grp_KeccakF1600_StatePer_fu_469_s_10_o;
            end if; 
        end if;
    end process;

    s_11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_11 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_11 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_11_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_11_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_11 <= grp_KeccakF1600_StatePer_fu_469_s_11_o;
            end if; 
        end if;
    end process;

    s_12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_12 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_12 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_12_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_12_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_12 <= grp_KeccakF1600_StatePer_fu_469_s_12_o;
            end if; 
        end if;
    end process;

    s_13_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_13 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_13 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_13_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_13_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_13 <= grp_KeccakF1600_StatePer_fu_469_s_13_o;
            end if; 
        end if;
    end process;

    s_14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_14 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_14 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_14_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_14_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_14 <= grp_KeccakF1600_StatePer_fu_469_s_14_o;
            end if; 
        end if;
    end process;

    s_15_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_15 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_15 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_15_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_15_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_15 <= grp_KeccakF1600_StatePer_fu_469_s_15_o;
            end if; 
        end if;
    end process;

    s_16_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_16 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_16 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_16_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_16_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_16 <= grp_KeccakF1600_StatePer_fu_469_s_16_o;
            end if; 
        end if;
    end process;

    s_17_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_17 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_17 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_17_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_17_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_17 <= grp_KeccakF1600_StatePer_fu_469_s_17_o;
            end if; 
        end if;
    end process;

    s_18_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_18 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_18 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_18_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_18_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_18 <= grp_KeccakF1600_StatePer_fu_469_s_18_o;
            end if; 
        end if;
    end process;

    s_19_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_19 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_19 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_19_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_19_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_19 <= grp_KeccakF1600_StatePer_fu_469_s_19_o;
            end if; 
        end if;
    end process;

    s_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_2 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_2 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_2 <= grp_KeccakF1600_StatePer_fu_469_s_2_o;
            end if; 
        end if;
    end process;

    s_20_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln308_fu_1115_p2 = ap_const_lv1_0))) then 
                s_20 <= xor_ln339_fu_1120_p2;
            elsif (((i_1_reg_292 = ap_const_lv5_14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_20 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_20 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_20_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_20_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_20 <= grp_KeccakF1600_StatePer_fu_469_s_20_o;
            end if; 
        end if;
    end process;

    s_21_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((i_1_reg_292 = ap_const_lv5_15) or ((i_1_reg_292 = ap_const_lv5_16) or ((i_1_reg_292 = ap_const_lv5_17) or ((i_1_reg_292 = ap_const_lv5_18) or ((i_1_reg_292 = ap_const_lv5_19) or ((i_1_reg_292 = ap_const_lv5_1A) or ((i_1_reg_292 = ap_const_lv5_1B) or ((i_1_reg_292 = ap_const_lv5_1C) or ((i_1_reg_292 = ap_const_lv5_1D) or ((i_1_reg_292 = ap_const_lv5_1E) or (i_1_reg_292 = ap_const_lv5_1F))))))))))))) then 
                s_21 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_21 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_21_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_21_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_21 <= grp_KeccakF1600_StatePer_fu_469_s_21_o;
            end if; 
        end if;
    end process;

    s_22_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_22 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_22_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_22_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_22 <= grp_KeccakF1600_StatePer_fu_469_s_22_o;
            end if; 
        end if;
    end process;

    s_23_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_23 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_23_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_23_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_23 <= grp_KeccakF1600_StatePer_fu_469_s_23_o;
            end if; 
        end if;
    end process;

    s_24_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_24 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_24_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_24_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_24 <= grp_KeccakF1600_StatePer_fu_469_s_24_o;
            end if; 
        end if;
    end process;

    s_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_3 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_3 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_3 <= grp_KeccakF1600_StatePer_fu_469_s_3_o;
            end if; 
        end if;
    end process;

    s_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_4 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_4 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_4_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_4_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_4 <= grp_KeccakF1600_StatePer_fu_469_s_4_o;
            end if; 
        end if;
    end process;

    s_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_5 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_5 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_5_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_5_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_5 <= grp_KeccakF1600_StatePer_fu_469_s_5_o;
            end if; 
        end if;
    end process;

    s_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_6 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_6 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_6_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_6_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_6 <= grp_KeccakF1600_StatePer_fu_469_s_6_o;
            end if; 
        end if;
    end process;

    s_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_7 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_7 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_7_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_7_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_7 <= grp_KeccakF1600_StatePer_fu_469_s_7_o;
            end if; 
        end if;
    end process;

    s_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_8 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_8 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_8_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_8_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_8 <= grp_KeccakF1600_StatePer_fu_469_s_8_o;
            end if; 
        end if;
    end process;

    s_9_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_1_reg_292 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                s_9 <= xor_ln276_fu_977_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_9 <= ap_const_lv64_0;
            elsif ((((grp_KeccakF1600_StatePer_fu_469_s_9_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_s_9_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                s_9 <= grp_KeccakF1600_StatePer_fu_469_s_9_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln268_reg_1338 <= add_ln268_fu_848_p2;
                end_reg_1331 <= end_fu_829_p3;
                trunc_ln261_reg_1323 <= trunc_ln261_fu_815_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then
                add_ln301_reg_1502 <= add_ln301_fu_947_p2;
                input_load_1_1_reg_1377 <= input_r_q1(15 downto 8);
                input_load_1_reg_1367 <= input_r_q0(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln361_fu_1240_p2 = ap_const_lv1_0))) then
                add_ln364_1_reg_1574 <= add_ln364_1_fu_1275_p2;
                trunc_ln364_reg_1569 <= trunc_ln364_fu_1266_p1;
                trunc_ln3_reg_1564 <= r_0_reg_448(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then
                empty_6_reg_1362 <= empty_6_fu_899_p1;
                empty_8_reg_1372 <= empty_8_fu_903_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_KeccakF1600_StatePer_fu_469_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                end_1_reg_1524 <= end_1_fu_1175_p3;
                trunc_ln350_reg_1519 <= trunc_ln350_fu_1155_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_3_reg_1535 <= i_3_fu_1188_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_1347 <= i_fu_859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln261_fu_803_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln263_reg_1318 <= icmp_ln263_fu_809_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln268_reg_1343 <= icmp_ln268_fu_854_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                icmp_ln308_reg_1507 <= icmp_ln308_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln361_reg_1555 <= icmp_ln361_fu_1240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln358_fu_1183_p2 = ap_const_lv1_0))) then
                    zext_ln364_reg_1540(6 downto 2) <= zext_ln364_fu_1202_p1(6 downto 2);
            end if;
        end if;
    end process;
    zext_ln364_reg_1540(1 downto 0) <= "00";
    zext_ln364_reg_1540(15 downto 7) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln261_fu_803_p2, icmp_ln268_fu_854_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, grp_KeccakF1600_StatePer_fu_469_ap_done, ap_block_state8_on_subcall_done, ap_CS_fsm_state10, icmp_ln358_fu_1183_p2, ap_CS_fsm_state11, icmp_ln361_fu_1240_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp1_stage0_subdone, ap_CS_fsm_state9, icmp_ln350_fu_1149_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln261_fu_803_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln268_fu_854_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln268_fu_854_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln350_fu_1149_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_KeccakF1600_StatePer_fu_469_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln358_fu_1183_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln361_fu_1240_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln361_fu_1240_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln268_fu_848_p2 <= std_logic_vector(unsigned(zext_ln268_fu_844_p1) + unsigned(p_02_idx_reg_280));
    add_ln273_fu_889_p2 <= std_logic_vector(unsigned(trunc_ln261_reg_1323) + unsigned(zext_ln273_fu_885_p1));
    add_ln274_fu_917_p2 <= std_logic_vector(unsigned(trunc_ln261_reg_1323) + unsigned(zext_ln274_fu_913_p1));
    add_ln275_fu_937_p2 <= std_logic_vector(unsigned(trunc_ln261_reg_1323) + unsigned(zext_ln275_fu_933_p1));
    add_ln301_fu_947_p2 <= std_logic_vector(unsigned(p_1_rec_reg_304) + unsigned(ap_const_lv7_4));
    add_ln364_1_fu_1275_p2 <= std_logic_vector(unsigned(zext_ln364_reg_1540) + unsigned(add_ln364_fu_1270_p2));
    add_ln364_fu_1270_p2 <= std_logic_vector(unsigned(zext_ln361_fu_1252_p1) + unsigned(trunc_ln350_reg_1519));
    add_ln369_fu_1217_p2 <= std_logic_vector(unsigned(p_0_rec_reg_375) + unsigned(zext_ln369_fu_1213_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state14 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_on_subcall_done_assign_proc : process(icmp_ln308_reg_1507, grp_KeccakF1600_StatePer_fu_469_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((icmp_ln308_reg_1507 = ap_const_lv1_1) and (grp_KeccakF1600_StatePer_fu_469_ap_done = ap_const_logic_0));
    end process;


    ap_condition_1265_assign_proc : process(ap_phi_mux_i_2_phi_fu_391_p4)
    begin
                ap_condition_1265 <= (not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_14)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_13)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_12)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_11)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_10)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_F)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_E)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_D)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_C)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_B)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_A)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_9)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_8)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_7)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_6)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_5)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_4)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_3)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_2)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_1)) and not((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_0)));
    end process;


    ap_condition_157_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_157 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_336_assign_proc : process(i_1_reg_292, icmp_ln268_reg_1343)
    begin
                ap_condition_336 <= (not((i_1_reg_292 = ap_const_lv5_0)) and not((i_1_reg_292 = ap_const_lv5_1)) and not((i_1_reg_292 = ap_const_lv5_2)) and not((i_1_reg_292 = ap_const_lv5_3)) and not((i_1_reg_292 = ap_const_lv5_4)) and not((i_1_reg_292 = ap_const_lv5_5)) and not((i_1_reg_292 = ap_const_lv5_6)) and not((i_1_reg_292 = ap_const_lv5_7)) and not((i_1_reg_292 = ap_const_lv5_8)) and not((i_1_reg_292 = ap_const_lv5_9)) and not((i_1_reg_292 = ap_const_lv5_A)) and not((i_1_reg_292 = ap_const_lv5_B)) and not((i_1_reg_292 = ap_const_lv5_C)) and not((i_1_reg_292 = ap_const_lv5_D)) and not((i_1_reg_292 = ap_const_lv5_E)) and not((i_1_reg_292 = ap_const_lv5_F)) and not((i_1_reg_292 = ap_const_lv5_10)) and not((i_1_reg_292 = ap_const_lv5_11)) and not((i_1_reg_292 = ap_const_lv5_12)) and not((i_1_reg_292 = ap_const_lv5_13)) and not((i_1_reg_292 = ap_const_lv5_14)) and (icmp_ln268_reg_1343 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln268_fu_854_p2)
    begin
        if ((icmp_ln268_fu_854_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state12_assign_proc : process(icmp_ln361_fu_1240_p2)
    begin
        if ((icmp_ln361_fu_1240_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state9, icmp_ln350_fu_1149_p2)
    begin
        if ((((icmp_ln350_fu_1149_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_1_phi_fu_296_p4_assign_proc : process(i_1_reg_292, icmp_ln268_reg_1343, ap_CS_fsm_pp0_stage0, i_reg_1347, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
            ap_phi_mux_i_1_phi_fu_296_p4 <= i_reg_1347;
        else 
            ap_phi_mux_i_1_phi_fu_296_p4 <= i_1_reg_292;
        end if; 
    end process;

    ap_phi_mux_i_2_phi_fu_391_p4 <= i_2_reg_387;

    ap_phi_mux_p_1_rec_phi_fu_308_p4_assign_proc : process(p_1_rec_reg_304, icmp_ln268_reg_1343, ap_CS_fsm_pp0_stage0, add_ln301_reg_1502, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_1343 = ap_const_lv1_0))) then 
            ap_phi_mux_p_1_rec_phi_fu_308_p4 <= add_ln301_reg_1502;
        else 
            ap_phi_mux_p_1_rec_phi_fu_308_p4 <= p_1_rec_reg_304;
        end if; 
    end process;


    ap_phi_mux_r_1_phi_fu_401_p44_assign_proc : process(s_0, s_1, s_2, s_3, s_4, s_5, s_6, s_7, s_8, s_9, s_10, s_11, s_12, s_13, s_14, s_15, s_16, s_17, s_18, s_19, s_20, s_21, icmp_ln358_fu_1183_p2, ap_CS_fsm_state11, ap_phi_mux_i_2_phi_fu_391_p4, ap_condition_1265)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln358_fu_1183_p2 = ap_const_lv1_0))) then
            if ((ap_const_boolean_1 = ap_condition_1265)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_21;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_14)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_20;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_13)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_19;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_12)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_18;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_11)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_17;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_10)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_16;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_F)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_15;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_E)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_14;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_D)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_13;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_C)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_12;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_B)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_11;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_A)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_10;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_9)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_9;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_8)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_8;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_7)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_7;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_6)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_6;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_5)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_5;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_4)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_4;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_3)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_3;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_2)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_2;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_1)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_1;
            elsif ((ap_phi_mux_i_2_phi_fu_391_p4 = ap_const_lv5_0)) then 
                ap_phi_mux_r_1_phi_fu_401_p44 <= s_0;
            else 
                ap_phi_mux_r_1_phi_fu_401_p44 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_r_1_phi_fu_401_p44 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_phi_ln276_reg_316 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state9, icmp_ln350_fu_1149_p2)
    begin
        if (((icmp_ln350_fu_1149_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_10_fu_957_p1 <= input_r_q1(8 - 1 downto 0);
    empty_6_fu_899_p1 <= input_r_q0(8 - 1 downto 0);
    empty_8_fu_903_p1 <= input_r_q1(8 - 1 downto 0);
    empty_9_fu_953_p1 <= input_r_q0(8 - 1 downto 0);
    end_1_fu_1175_p3 <= 
        ap_const_lv5_15 when (icmp_ln353_fu_1159_p2(0) = '1') else 
        trunc_ln2_fu_1165_p4;
    end_fu_829_p3 <= 
        ap_const_lv5_15 when (icmp_ln263_reg_1318(0) = '1') else 
        trunc_ln_fu_819_p4;
    grp_KeccakF1600_StatePer_fu_469_ap_start <= grp_KeccakF1600_StatePer_fu_469_ap_start_reg;
    grp_fu_523_p4 <= input_r_q0(15 downto 8);
    grp_fu_533_p4 <= input_r_q1(15 downto 8);
    i_3_fu_1188_p2 <= std_logic_vector(unsigned(i_2_reg_387) + unsigned(ap_const_lv5_1));
    i_fu_859_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_1_phi_fu_296_p4) + unsigned(ap_const_lv5_1));
    icmp_ln261_fu_803_p2 <= "1" when (p_03_reg_270 = ap_const_lv16_0) else "0";
    icmp_ln263_fu_809_p2 <= "1" when (unsigned(p_03_reg_270) > unsigned(ap_const_lv16_A7)) else "0";
    icmp_ln268_fu_854_p2 <= "1" when (ap_phi_mux_i_1_phi_fu_296_p4 = end_reg_1331) else "0";
    icmp_ln308_fu_1115_p2 <= "1" when (end_reg_1331 = ap_const_lv5_15) else "0";
    icmp_ln350_fu_1149_p2 <= "1" when (p_01_reg_365 = ap_const_lv16_0) else "0";
    icmp_ln353_fu_1159_p2 <= "1" when (unsigned(p_01_reg_365) > unsigned(ap_const_lv16_A7)) else "0";
    icmp_ln358_fu_1183_p2 <= "1" when (i_2_reg_387 = end_1_reg_1524) else "0";
    icmp_ln361_fu_1240_p2 <= "1" when (j_0_reg_458 = ap_const_lv3_4) else "0";

    input_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, p_02_idx27_cast_fu_874_p1, zext_ln274_1_fu_922_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_r_address0 <= zext_ln274_1_fu_922_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_r_address0 <= p_02_idx27_cast_fu_874_p1(14 - 1 downto 0);
            else 
                input_r_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            input_r_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln273_1_fu_894_p1, ap_block_pp0_stage1, zext_ln275_1_fu_942_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_r_address1 <= zext_ln275_1_fu_942_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_r_address1 <= zext_ln273_1_fu_894_p1(14 - 1 downto 0);
            else 
                input_r_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            input_r_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_1246_p2 <= std_logic_vector(unsigned(j_0_reg_458) + unsigned(ap_const_lv3_1));
    or_ln273_fu_879_p2 <= (ap_phi_mux_p_1_rec_phi_fu_308_p4 or ap_const_lv7_1);
    or_ln274_fu_907_p2 <= (p_1_rec_reg_304 or ap_const_lv7_2);
    or_ln275_fu_927_p2 <= (p_1_rec_reg_304 or ap_const_lv7_3);
    output_r_address0 <= zext_ln364_1_fu_1301_p1(15 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= (trunc_ln364_reg_1569 & trunc_ln3_reg_1564);

    output_r_we0_assign_proc : process(icmp_ln361_reg_1555, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln361_reg_1555 = ap_const_lv1_0))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_02_idx27_cast_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02_idx27_fu_869_p2),64));
    p_02_idx27_fu_869_p2 <= std_logic_vector(unsigned(trunc_ln261_reg_1323) + unsigned(p_1_rec_cast_fu_865_p1));
    p_1_rec_cast_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_1_rec_phi_fu_308_p4),15));
    p_Result_s_fu_961_p9 <= (((((((empty_10_fu_957_p1 & grp_fu_533_p4) & empty_9_fu_953_p1) & grp_fu_523_p4) & empty_8_reg_1372) & input_load_1_1_reg_1377) & empty_6_reg_1362) & input_load_1_reg_1367);
    r_2_fu_1280_p4 <= r_0_reg_448(63 downto 16);
    r_3_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_2_fu_1280_p4),64));
    shl_ln1_fu_1206_p3 <= (end_1_reg_1524 & ap_const_lv2_0);
    shl_ln2_fu_1223_p3 <= (end_1_reg_1524 & ap_const_lv3_0);
    shl_ln3_fu_1132_p3 <= (end_reg_1331 & ap_const_lv3_0);
    shl_ln4_fu_1194_p3 <= (i_2_reg_387 & ap_const_lv2_0);
    shl_ln_fu_836_p3 <= (end_fu_829_p3 & ap_const_lv2_0);
    sub_ln342_fu_1143_p2 <= std_logic_vector(unsigned(p_03_reg_270) - unsigned(zext_ln342_fu_1139_p1));
    sub_ln370_fu_1234_p2 <= std_logic_vector(unsigned(p_01_reg_365) - unsigned(zext_ln370_fu_1230_p1));
    trunc_ln261_fu_815_p1 <= p_02_idx_reg_280(15 - 1 downto 0);
    trunc_ln2_fu_1165_p4 <= p_01_reg_365(7 downto 3);
    trunc_ln350_fu_1155_p1 <= p_0_rec_reg_375(16 - 1 downto 0);
    trunc_ln364_fu_1266_p1 <= r_0_reg_448(8 - 1 downto 0);
    trunc_ln_fu_819_p4 <= p_03_reg_270(7 downto 3);
    xor_ln276_fu_977_p2 <= (p_Result_s_fu_961_p9 xor ap_phi_reg_pp0_iter1_phi_ln276_reg_316);
    xor_ln339_fu_1120_p2 <= (s_20 xor ap_const_lv64_8000000000000000);
    zext_ln268_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_836_p3),64));
    zext_ln273_1_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln273_fu_889_p2),64));
    zext_ln273_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln273_fu_879_p2),15));
    zext_ln274_1_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln274_fu_917_p2),64));
    zext_ln274_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln274_fu_907_p2),15));
    zext_ln275_1_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln275_fu_937_p2),64));
    zext_ln275_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln275_fu_927_p2),15));
    zext_ln342_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln3_fu_1132_p3),16));
    zext_ln361_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_458),16));
    zext_ln364_1_fu_1301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln364_1_reg_1574),64));
    zext_ln364_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_1194_p3),16));
    zext_ln369_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_1206_p3),64));
    zext_ln370_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_1223_p3),16));
end behav;
